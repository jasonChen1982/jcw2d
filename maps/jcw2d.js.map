{"version":3,"sources":["jcw2d.js","modules/utils.js","modules/event.js","modules/animation.js","modules/math/point.js","modules/math/matrix.js","modules/textures/baseTexture.js","modules/textures/texture.js","modules/textures/textureUvs.js","modules/display/display.js","modules/display/container.js","modules/sprite/sprite.js","modules/particles/particleContainer.js","modules/RAF.js","modules/const.js","modules/tween.js"],"names":["root","factory","exports","module","define","amd","JC","this","_rt","val","Object","prototype","toString","call","InteractionData","global","x","y","target","originalEvent","cancleBubble","ratio","type","Eventer","touchstarted","mouseDowned","listeners","Animate","opts","element","duration","living","onCompelete","onUpdate","infinity","alternate","ease","repeats","delay","progress","timeScale","paused","Transition","ATRS","from","ATRE","to","Animation","_keyframes","keys","_keyIndex","_direction","_keyConfig","keyConfig","configKey","MovieClip","animations","index","direction","frames","sy","sx","fillMode","fps","pt","nt","PathMotion","points","attachNormal","sDeg","tDeg","pDeg","Animator","start","animates","Point","Matrix","a","b","c","d","tx","ty","BaseTexture","source","scaleMode","width","height","realWidth","realHeight","CONST","SCALE_MODES","DEFAULT","hasLoaded","isLoading","resolution","premultipliedAlpha","imageUrl","isPowerOfTwo","mipmap","loadSource","Texture","baseTexture","frame","noFrame","math","Rectangle","_frame","valid","requiresUpdate","_uvs","on","onBaseTextureUpdated","once","onBaseTextureLoaded","TextureUvs","x0","y0","x1","y1","x2","y2","x3","y3","DisplayObject","_ready","visible","worldAlpha","alpha","scaleX","scaleY","skewX","skewY","rotation","rotationCache","_sr","_cr","pivotX","pivotY","mask","parent","worldTransform","event","passEvent","bound","Container","cds","Sprite","texture","anchor","_texture","_width","_height","tint","blendMode","BLEND_MODES","NORMAL","shader","cachedTint","ParticleContainer","maxSize","properties","batchSize","maxBatchSize","_properties","_maxSize","_batchSize","_buffers","_bufferToUpdate","interactiveChildren","setProperties","window","lastTime","androidUC","test","navigator","userAgent","vendors","length","requestAnimationFrame","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","RAF","requestAnimFrame","VERSION","PI_2","PI","RTD","DTR","ADD","MULTIPLY","SCREEN","DRAW_MODES","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","LINEAR","NEAREST","DEFAULT_RENDER_OPTIONS","view","antialias","autoResize","transparent","backgroundColor","clearBeforeRender","preserveDrawingBuffer","SPRITE_BATCH_SIZE","UTILS","hex2rgb","hex","out","hex2string","substr","rgb2hex","rgb","getNextPowerOfTwo","number","result","sayHi","_saidHi","toLowerCase","indexOf","args","console","log","apply","isWebGLSupported","contextOptions","stencil","WebGLRenderingContext","canvas","document","createElement","gl","getContext","getContextAttributes","e","sign","n","removeItems","arr","startIdx","removeCount","i","len","copyJSON","json","JSON","parse","stringify","isArray","ks","object","isObject","isNumber","isFunction","random","min","euclideanModulo","m","clamp","TextureCache","BaseTextureCache","TWEEN","easeBoth","t","extend","key","fn","push","off","cbs","splice","emit","ev","undefined","ears","nextPose","cache","pause","stop","cancle","create","constructor","update","snippet","pose","setVal","sc","config","interval","next","getFramePos","pos","cf","row","_textureW","lintRow","lintCol","mCol","mRow","playMovie","movie","format","isString","warn","end","This","defineProperty","get","getPoint","rotate","decomposeRotate","rT","l","slice","r","oP","oL","oR","p1","p2","xxxxx","fromTo","animate","keyFrames","clone","copy","p","set","equals","fromArray","array","toArray","transpose","Float32Array","newPos","applyInverse","translate","scale","angle","cos","sin","a1","c1","tx1","append","matrix","b1","d1","identity","setTransform","sr","cr","cy","nsx","cx","IDENTITY","TEMP_MATRIX","naturalWidth","naturalHeight","utils","wasLoading","complete","_sourceLoaded","onload","onerror","src","fromImage","crossorigin","image","Image","crossOrigin","defineProperties","_updateUvs","fromCanvas","baseFrame","tw","th","clear","isVisible","vals","updateMe","wt","upAnimation","ctx","globalAlpha","getGlobalPos","cb","getBound","setBound","needless","regX","regY","ContainsPoint","px","py","ax","ay","bx","by","lup","depth","lx","addChilds","cd","arguments","removeChilds","updateTransform","updateChilds","render","save","renderMe","renderChilds","restore","noticeEvent","child","upEvent","hitTest","re","hitTestMe","abs","value","_onTextureUpdate","upTexture","_textureH","renderer","setObjectRenderer","plugins","sprite","getBounds","getLocalBounds","containsPoint","point","position","uvs","displayObjectUpdateTransform","children","renderable","particle"],"mappings":"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","file":"../src/jcw2d.js","sourcesContent":["(function (root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(function () {\n      return (root.JC = factory());\n    });\n  } else {\n    // Global Variables\n    root.JC = factory();\n  }\n}(this, function () {\n\n    var JC = window.JC||{};\n\n    (function() {\n        var lastTime = 0;\n        var androidUC = /(?=.*?uc)(?=.*?android)/i.test(window.navigator.userAgent);\n        var vendors = ['ms', 'moz', 'webkit', 'o'];\n        for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n            window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n            window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\n                window[vendors[x] + 'CancelRequestAnimationFrame'];\n        }\n    \n        if (!window.requestAnimationFrame||androidUC) {\n            window.requestAnimationFrame = function(callback) {\n                var currTime = new Date().getTime();\n                var timeToCall = Math.max(0, 20 - (currTime - lastTime));\n                var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n                  timeToCall);\n                lastTime = currTime + timeToCall;\n                return id;\n            };\n        }\n    \n        if (!window.cancelAnimationFrame) {\n            window.cancelAnimationFrame = function(id) {\n                clearTimeout(id);\n            };\n        }\n    \n        window.RAF = window.requestAnimFrame = window.requestAnimationFrame;\n    })();\n\n    \n    JC.CONST = {\n        VERSION: '0.0.1',\n    \n        PI_2: Math.PI * 2,\n    \n        RTD: 180 / Math.PI,\n    \n        DTR: Math.PI / 180,\n    \n    \n        /**\n         *\n         * @static\n         * @constant\n         * @property {object} BLEND_MODES\n         * @property {number} BLEND_MODES.NORMAL\n         * @property {number} BLEND_MODES.ADD\n         * @property {number} BLEND_MODES.MULTIPLY\n         * @property {number} BLEND_MODES.SCREEN\n         */\n        BLEND_MODES: {\n            NORMAL:         0,\n            ADD:            1,\n            MULTIPLY:       2,\n            SCREEN:         3\n        },\n    \n        /**\n         *\n         * @static\n         * @constant\n         * @property {object} DRAW_MODES\n         * @property {number} DRAW_MODES.POINTS\n         * @property {number} DRAW_MODES.LINES\n         * @property {number} DRAW_MODES.LINE_LOOP\n         * @property {number} DRAW_MODES.LINE_STRIP\n         * @property {number} DRAW_MODES.TRIANGLES\n         * @property {number} DRAW_MODES.TRIANGLE_STRIP\n         * @property {number} DRAW_MODES.TRIANGLE_FAN\n         */\n        DRAW_MODES: {\n            POINTS:         0,\n            LINES:          1,\n            LINE_LOOP:      2,\n            LINE_STRIP:     3,\n            TRIANGLES:      4,\n            TRIANGLE_STRIP: 5,\n            TRIANGLE_FAN:   6\n        },\n    \n        /**\n         *\n         * @static\n         * @constant\n         * @property {object} SCALE_MODES\n         * @property {number} SCALE_MODES.DEFAULT=LINEAR\n         * @property {number} SCALE_MODES.LINEAR Smooth scaling\n         * @property {number} SCALE_MODES.NEAREST Pixelating scaling\n         */\n        SCALE_MODES: {\n            DEFAULT:    0,\n            LINEAR:     0,\n            NEAREST:    1\n        },\n    \n        DEFAULT_RENDER_OPTIONS: {\n            view: null,\n            resolution: 1,\n            antialias: false,\n            autoResize: false,\n            transparent: false,\n            backgroundColor: 0x000000,\n            clearBeforeRender: true,\n            preserveDrawingBuffer: false\n        },\n    \n        SPRITE_BATCH_SIZE: 2000 //nice balance between mobile and desktop machines\n    };\n\n    \n    /**\n     * 简单拷贝json对象\n     *\n     * @name copyJSON\n     * @memberof JC\n     * @property {JC.copyJSON}\n     */\n     \n    // JC.copyJSON = ;\n    \n    /**\n     * 将角度转化成弧度\n     *\n     * @name DTR\n     * @memberof JC\n     * @property {JC.DTR}\n     */\n    \n    // JC.DTR = Math.PI/180;\n    \n    \n    /**\n     * 是否为数组\n     *\n     * @name isArray\n     * @memberof JC\n     * @property {JC.isArray}\n     */\n    // JC.isArray = ;\n    \n    /**\n     * 是否为对象\n     *\n     * @name isObject\n     * @memberof JC\n     * @property {JC.isObject}\n     */\n    // JC.isObject = (function(){\n    //     var ks = _rt({});\n    //     return function(object){\n    //         return Object.prototype.toString.call(object) === ks;\n    //     };\n    // })();\n    \n    /**\n     * 是否为数字\n     *\n     * @name isNumber\n     * @memberof JC\n     * @property {JC.isNumber}\n     */\n    // JC.isNumber = (function(){\n    //     var ks = _rt(1);\n    //     return function(object){\n    //         return Object.prototype.toString.call(object) === ks;\n    //     };\n    // })();\n    \n    /**\n     * 是否为函数\n     *\n     * @name isFunction\n     * @memberof JC\n     * @property {JC.isFunction}\n     */\n    // JC.isFunction = (function(){\n    //     var ks = _rt(function(){});\n    //     return function(object){\n    //         return Object.prototype.toString.call(object) === ks;\n    //     };\n    // })();\n    \n    /**\n     * 强化的随机数\n     *\n     * @name random\n     * @memberof JC\n     * @property {JC.random}\n     */\n    \n    // JC.random = function(min, max){\n    //     if (JC.isArray(min))\n    //         return min[~~(Math.random() * min.length)];\n    //     if (!JC.isNumber(max))\n    //         max = min || 1, min = 0;\n    //     return min + Math.random() * (max - min);\n    // };\n    \n    \n    /**\n     * 阿基米德求模\n     *\n     * @name euclideanModulo\n     * @memberof JC\n     * @property {JC.euclideanModulo}\n     */\n    \n    // JC.euclideanModulo = function(n, m){\n    //     return ((n % m) + m) % m;\n    // };\n    \n    function _rt(val){\n        return Object.prototype.toString.call(val);\n    }\n    \n    JC.UTILS = {\n    \n        hex2rgb: function (hex, out)\n        {\n            out = out || [];\n    \n            out[0] = (hex >> 16 & 0xFF) / 255;\n            out[1] = (hex >> 8 & 0xFF) / 255;\n            out[2] = (hex & 0xFF) / 255;\n    \n            return out;\n        },\n    \n        hex2string: function (hex)\n        {\n            hex = hex.toString(16);\n            hex = '000000'.substr(0, 6 - hex.length) + hex;\n    \n            return '#' + hex;\n        },\n    \n        rgb2hex: function (rgb)\n        {\n            return ((rgb[0]*255 << 16) + (rgb[1]*255 << 8) + rgb[2]*255);\n        },\n    \n        getNextPowerOfTwo: function (number)\n        {\n            // see: http://en.wikipedia.org/wiki/Power_of_two#Fast_algorithm_to_check_if_a_positive_number_is_a_power_of_two\n            if (number > 0 && (number & (number - 1)) === 0)\n            {\n                return number;\n            }\n            else\n            {\n                var result = 1;\n    \n                while (result < number)\n                {\n                    result <<= 1;\n                }\n    \n                return result;\n            }\n        },\n    \n        isPowerOfTwo: function (width, height)\n        {\n            return (width > 0 && (width & (width - 1)) === 0 && height > 0 && (height & (height - 1)) === 0);\n        },\n    \n        sayHi: function (type)\n        {\n            if (this._saidHi)\n            {\n                return;\n            }\n    \n            if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n            {\n                var args = [\n                    '\\n %c %c %c jcw2d.js ' + JC.CONST.VERSION + ' - ✰ ' + type + ' ✰  %c ' + ' %c ' + ' http://www.jason82.com/  %c %c ♥%c♥%c♥ \\n\\n',\n                    'background: #ff66a5; padding:5px 0;',\n                    'background: #ff66a5; padding:5px 0;',\n                    'color: #ff66a5; background: #030307; padding:5px 0;',\n                    'background: #ff66a5; padding:5px 0;',\n                    'background: #ffc3dc; padding:5px 0;',\n                    'background: #ff66a5; padding:5px 0;',\n                    'color: #ff2424; background: #fff; padding:5px 0;',\n                    'color: #ff2424; background: #fff; padding:5px 0;',\n                    'color: #ff2424; background: #fff; padding:5px 0;'\n                ];\n    \n                window.console.log.apply(console, args); //jshint ignore:line\n            }\n            else if (window.console)\n            {\n                window.console.log('jcw2d.js ' + JC.CONST.VERSION + ' - ' + type + ' - http://www.jason82.com/'); //jshint ignore:line\n            }\n    \n            this._saidHi = true;\n        },\n    \n        isWebGLSupported: function ()\n        {\n            var contextOptions = { stencil: true };\n            try\n            {\n                if (!window.WebGLRenderingContext)\n                {\n                    return false;\n                }\n    \n                var canvas = document.createElement('canvas'),\n                    gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n    \n                return !!(gl && gl.getContextAttributes().stencil);\n            }\n            catch (e)\n            {\n                return false;\n            }\n        },\n    \n        sign: function (n)\n        {\n            return n ? (n < 0 ? -1 : 1) : 0;\n        },\n    \n        removeItems: function (arr, startIdx, removeCount)\n        {\n            var length = arr.length;\n    \n            if (startIdx >= length || removeCount === 0)\n            {\n                return;\n            }\n    \n            removeCount = (startIdx+removeCount > length ? length-startIdx : removeCount);\n            for (var i = startIdx, len = length-removeCount; i < len; ++i)\n            {\n                arr[i] = arr[i + removeCount];\n            }\n    \n            arr.length = len;\n        },\n    \n        copyJSON: function(json){\n            return JSON.parse(JSON.stringify(json));\n        },\n    \n        isArray: (function(){\n            var ks = _rt('s');\n            return function(object){\n                return Object.prototype.toString.call(object) === ks;\n            };\n        })(),\n    \n        isObject: (function(){\n            var ks = _rt({});\n            return function(object){\n                return Object.prototype.toString.call(object) === ks;\n            };\n        })(),\n    \n        isNumber: (function(){\n            var ks = _rt(1);\n            return function(object){\n                return Object.prototype.toString.call(object) === ks;\n            };\n        })(),\n    \n        /**\n         * 是否为函数\n         *\n         * @name isFunction\n         * @memberof JC\n         * @property {JC.isFunction}\n         */\n        isFunction: (function(){\n            var ks = _rt(function(){});\n            return function(object){\n                return Object.prototype.toString.call(object) === ks;\n            };\n        })(),\n    \n        /**\n         * 强化的随机数\n         *\n         * @name random\n         * @memberof JC\n         * @property {JC.random}\n         */\n        random: function(min, max){\n            if (this.isArray(min))\n                return min[~~(Math.random() * min.length)];\n            if (!this.isNumber(max))\n                max = min || 1, min = 0;\n            return min + Math.random() * (max - min);\n        },\n    \n        /**\n         * 阿基米德求模\n         *\n         * @name euclideanModulo\n         * @memberof JC\n         * @property {JC.euclideanModulo}\n         */\n        euclideanModulo: function(n, m){\n            return ((n % m) + m) % m;\n        },\n        \n        clamp: function(x, a, b) {\n            return (x < a) ? a : ((x > b) ? b : x);\n        },\n    \n        TextureCache: {},\n    \n        BaseTextureCache: {}\n    \n    };\n    \n    \n    \n\n    JC.TWEEN = {\n        easeBoth: function(t, b, c, d) { //加速减速曲线\n            if ((t /= d / 2) < 1) {\n                return c / 2 * t * t + b;\n            }\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\n        },\n        extend: function(opts) {\n            if (!opts) return;\n            for (var key in opts) {\n                if (key !== 'extend' && opts[key]) this[key] = opts[key];\n            }\n        }\n    };\n    \n\n    \n    /**\n     * jcw2d的事件消息对象的类\n     *\n     * @class JC.InteractionData\n     * @constructor\n     */\n    function InteractionData(){\n        /**\n         * 转换到canvas坐标系统的事件触发点\n         *\n         * @property global\n         * @type Object\n         */\n        this.global = {x:-100000,y:-100000};\n    \n        /**\n         * 事件源\n         *\n         * @property target\n         * @type JC.Container\n         */\n        this.target = null;\n    \n        /**\n         * 浏览器的原始事件对象\n         *\n         * @property originalEvent\n         * @type Event\n         */\n        this.originalEvent = null;\n    \n        /**\n         * 在canvas内阻止事件冒泡\n         *\n         * @property cancleBubble\n         * @type Boolean\n         */\n        this.cancleBubble = false;\n    \n        /**\n         * canvas视窗和页面坐标的兑换比例\n         *\n         * @property ratio\n         * @type Number\n         */\n        this.ratio = 1;\n    \n        /**\n         * 事件类型\n         *\n         * @property type\n         * @type String\n         */\n        this.type = '';\n    }\n    JC.InteractionData = InteractionData;\n    \n    \n    \n    /**\n     * jcw2d的事件对象的类\n     *\n     * @class JC.Eventer\n     * @constructor Eventer\n     * @memberof JC\n     */\n    function Eventer(){\n        this.touchstarted = false;\n        this.mouseDowned = false;\n        this.listeners = {};\n    }\n    /**\n     * 事件对象的事件绑定函数\n     *\n     * @param type {String} 事件类型\n     * @param fn {Function} 回调函数\n     * @private\n     */\n    Eventer.prototype.on = function(type,fn){\n        this.listeners[type] = this.listeners[type]||[];\n        this.listeners[type].push(fn);\n    };\n    /**\n     * 事件对象的事件解绑函数\n     *\n     * @param type {String} 事件类型\n     * @param fn {Function} 注册时回调函数的引用\n     * @private\n     */\n    Eventer.prototype.off = function(type,fn){\n        if (this.listeners[type]) {\n            var i = this.listeners[type].length;\n            if(fn){\n                while (i--) {\n                    if (cbs[type][i] === fn) {\n                        cbs[type].splice(i, 1);\n                    }\n                }\n            }else{\n                cbs[type].length = 0;\n            }\n        }\n    };\n    /**\n     * 事件对象的触发事件函数\n     *\n     * @param ev {JC.InteractionData} 事件类型\n     * @private\n     */\n    Eventer.prototype.emit = function(ev){\n        if ( this.listeners === undefined ) return;\n        var ears = this.listeners;\n        var cbs = ears[ ev.type ];\n        if ( cbs !== undefined ) {\n            var length = cbs.length;\n            var i;\n            for ( i = 0; i < length; i ++ ) {\n                cbs[ i ].call( this, ev );\n            }\n        }\n    };\n    JC.Eventer = Eventer;\n\n    \n    /**\n     * 动画对象的基本类型\n     *\n     * @class\n     * @memberof JC\n     * @param [opts] {object} 动画配置信息\n     */\n    \n    function Animate(opts){\n        this.element = opts.element||{};\n        this.duration = opts.duration||300;\n        this.living = true;\n    \n        this.onCompelete = opts.onCompelete||null;\n        this.onUpdate = opts.onUpdate||null;\n    \n        this.infinity = opts.infinity||false;\n        this.alternate = opts.alternate||false;\n        this.ease = opts.ease||'easeBoth';\n        this.repeats = opts.repeats||0;\n        this.delay = opts.delay||0;\n        this.progress = 0-this.delay;\n    \n        this.timeScale = opts.timeScale||1;\n    \n        this.paused = false;\n    }\n    JC.Animate = Animate;\n    Animate.prototype.nextPose = function(){\n        var cache = {};\n        for(var i in this.ATRE){\n            cache[i] = JC.TWEEN[this.ease]( this.progress , this.ATRS[i] , this.ATRE[i] - this.ATRS[i] , this.duration );\n            if(this.element[i]!==undefined)this.element[i] = cache[i];\n        }\n        return cache;//this.onUpdate\n    };\n    Animate.prototype.pause = function(){\n        this.paused = true;\n    };\n    Animate.prototype.start = function(){\n        this.paused = false;\n    };\n    Animate.prototype.stop = function(){\n        this.progress = this.duration;\n    };\n    Animate.prototype.cancle = function(){\n        this.living = false;\n    };\n    \n    \n    /**\n     * Transition类型动画对象\n     *\n     * @class\n     * @memberof JC\n     * @param [opts] {object} 动画所具备的特性\n     */\n    \n    function Transition(opts){\n        JC.Animate.call(this,opts);\n    \n        this.ATRS = opts.from;\n        this.ATRE = opts.to;\n    }\n    JC.Transition = Transition;\n    Transition.prototype = Object.create( JC.Animate.prototype );\n    Transition.prototype.constructor = JC.Transition;\n    Transition.prototype.update = function(snippet){\n        if(this.paused||!this.living)return;\n        this.progress += this.timeScale*snippet;\n    \n        if(this.progress < this.duration){\n            if(this.progress<0)return;\n            var pose = this.nextPose();\n            this.onUpdate&&this.onUpdate(pose,this.progress/this.duration);\n        }else{\n            this.element.setVal(this.ATRE);\n            this.onUpdate&&this.onUpdate(this.ATRE,1);\n            if(this.repeats>0||this.infinity){\n                this.repeats>0&&--this.repeats;\n                this.progress = 0;\n                if(this.alternate){\n                    var sc = JC.copyJSON(this.ATRS);\n                    this.ATRS = JC.copyJSON(this.ATRE);\n                    this.ATRE = sc;\n                }else{\n                    this.element.setVal(this.ATRS);\n                }\n            }else{\n                this.living = false;\n                this.onCompelete&&this.onCompelete();\n            }\n        }\n    };\n    \n    \n    /**\n     * Animation类型动画对象\n     *\n     * @class\n     * @memberof JC\n     * @param [opts] {object} 动画配置信息\n     */\n    function Animation(opts){\n        JC.Animate.call(this,opts);\n    \n        this._keyframes = opts.keys;\n        this._keyIndex = 0;\n        this._direction = 1;\n        this._keyConfig = opts.keyConfig;\n    \n        this.configKey();\n    }\n    JC.Animation = Animation;\n    Animation.prototype = Object.create( JC.Animate.prototype );\n    Animation.prototype.constructor = JC.Animation;\n    Animation.prototype.configKey = function(){\n        this.ATRS = this._keyframes[this._keyIndex];\n        this._keyIndex += this._direction;\n        this.ATRE = this._keyframes[this._keyIndex];\n        var config = this._keyConfig[Math.min(this._keyIndex,this._keyIndex-this._direction)]||{};\n        this.ease = config.ease||this.ease;\n        this.duration = config.duration||this.duration;\n        this.progress = 0;\n    };\n    Animation.prototype.update = function(snippet){\n        if(this.paused||!this.living)return;\n        this.progress += this.timeScale*snippet;\n    \n        if(this.progress < this.duration){\n            if(this.progress<0)return;\n            var pose = this.nextPose();\n            this.onUpdate&&this.onUpdate(pose,this.progress/this.duration,this._keyIndex);\n        }else{\n            this.element.setVal(this.ATRE);\n            this.onUpdate&&this.onUpdate(this.ATRE,1,this._keyIndex);\n            if(this._keyIndex<this._keyframes.length-1&&this._keyIndex>0){\n                this.configKey();\n            }else{\n                if(this.repeats>0||this.infinity){\n                    this.repeats>0&&--this.repeats;\n                    if(this.alternate){\n                        this._direction *= -1;\n                    }else{\n                        this._keyIndex = 0;\n                    }\n                    this.configKey();\n                }else{\n                    this.living = false;\n                    this.onCompelete&&this.onCompelete();\n                }\n            }\n        }\n    };\n    \n    \n    /**\n     * MovieClip类型动画对象\n     *\n     * @class\n     * @memberof JC\n     * @param [element] {object} 动画对象 内部传入\n     * @param [opts] {object} 动画配置信息 内部传入\n     */\n    function MovieClip(element, opts){\n        this.element = element;\n        this.living = false;\n    \n        this.onCompelete = null;\n        // this.onUpdate = null;\n    \n        this.infinity = false;\n        this.alternate = false;\n        this.repeats = 0;\n    \n        this.animations = opts.animations||{};\n    \n        this.index = 0;\n        this.direction = 1;\n        this.frames = [];\n        this.sy = opts.sy||0;\n        this.sx = opts.sx||0;\n        this.fillMode = 0;\n        this.fps = 16;\n    \n        this.paused = false;\n    \n        this.pt = 0;\n        this.nt = 0;\n    }\n    JC.MovieClip = MovieClip;\n    MovieClip.prototype.update = function(snippet){\n        if(this.paused||!this.living)return;\n        this.nt += snippet;\n        if(this.nt-this.pt<this.interval)return;\n        this.pt = this.nt;\n        var i = this.index + this.direction;\n        if(i<this.frames.length&&i>=0){\n            this.index = i;\n            // Do you need this handler???\n            // this.onUpdate&&this.onUpdate(this.index);\n        }else{\n            if(this.repeats>0||this.infinity){\n                this.repeats>0&&--this.repeats;\n                if(this.alternate){\n                    this.direction *= -1;\n                    this.index += this.direction;\n                }else{\n                    this.direction = 1;\n                    this.index = 0;\n                }\n                // Do you need this handler???\n                // this.onUpdate&&this.onUpdate(this.index);\n            }else{\n                this.living = false;\n                this.index = this.fillMode;\n                this.onCompelete&&this.onCompelete();\n                this.next&&this.next();\n            }\n        }\n    };\n    MovieClip.prototype.getFramePos = function(){\n        var pos = {\n                x: this.sx,\n                y: this.sy\n            };\n        var cf = this.frames[this.index];\n        if(cf>0){\n            var row = this.element._textureW/this.element.width >> 0;\n            var lintRow = this.sx/this.element.width >> 0;\n            var lintCol = this.sy/this.element.height >> 0;\n            var mCol = lintCol+(lintRow+cf)/row >> 0;\n            var mRow = (lintRow+cf)%row;\n            pos.x = mRow*this.element.width;\n            pos.y = mCol*this.element.height;\n        }\n        return pos;\n    };\n    MovieClip.prototype.playMovie = function(opts){\n        this.next = null;\n        var movie = this.format(opts.movie);\n        if(!JC.isArray(movie))return;\n        this.frames = movie;\n        this.index = 0;\n        this.direction = 1;\n        this.fillMode = opts.fillMode||0;\n        this.fps = opts.fps||this.fps;\n        this.infinity = opts.infinity||false;\n        this.alternate = opts.alternate||false;\n        this.repeats = opts.repeats||0;\n        this.living = true;\n        this.onCompelete = opts.onCompelete||null;\n    };\n    MovieClip.prototype.format = function(movie){\n        if(JC.isString(movie)){\n            var config = this.animations[movie];\n            if(config){\n                return this.format(config);\n            }else{\n                console.warn(\n                '%c JC.MovieClip warn %c: you didn\\`t config %c'+movie+'%c in animations ',\n                'color: #f98165; background: #80a89e',\n                'color: #80a89e; background: #cad9d5;',\n                'color: #f98165; background: #cad9d5',\n                'color: #80a89e; background: #cad9d5'\n                );\n                return false;\n            }\n        }else if(JC.isArray(movie)){\n            return movie;\n        }else if(JC.isObject(movie)){\n            var arr = [];\n            for(var i=movie.start;i<=movie.end;i++){\n                arr.push(i);\n            }\n            if(movie.next&&this.animations[movie.next]){\n                var This = this;\n                this.next = function(){\n                    This.playMovie({\n                        movie: this.animations[movie.next],\n                        infinity: true\n                    });\n                };\n            }\n            return arr;\n        }\n    };\n    MovieClip.prototype.pause = function(){\n        this.paused = true;\n    };\n    MovieClip.prototype.start = function(){\n        this.paused = false;\n    };\n    MovieClip.prototype.cancle = function(){\n        this.living = false;\n    };\n    Object.defineProperty(MovieClip.prototype, 'interval', {\n        get: function() {\n            return this.fps>0?1000/this.fps>>0:16;\n        }\n    });\n    \n    \n    /**\n     * Transition类型动画对象\n     *\n     * @class\n     * @memberof JC\n     * @param [opts] {object} 动画所具备的特性\n     * @param [opts] {object} 动画配置信息\n     */\n    \n    function PathMotion(opts){\n        JC.Animate.call(this,opts);\n    \n        this.points = opts.points;\n        this.attachNormal = opts.attachNormal||false;\n        this.sDeg = false;\n        this.tDeg = 0;\n        this.pDeg = 0;\n    }\n    JC.PathMotion = PathMotion;\n    PathMotion.prototype = Object.create( JC.Animate.prototype );\n    PathMotion.prototype.constructor = JC.PathMotion;\n    PathMotion.prototype.update = function(snippet){\n        if(this.paused||!this.living)return;\n        this.progress += this.timeScale*snippet;\n    \n        if(this.progress < this.duration){\n            if(this.progress<0)return;\n            var pose = this.nextPose();\n            this.onUpdate&&this.onUpdate(pose,this.progress/this.duration);\n        }else{\n            this.element.setVal(this.ATRE);\n            this.onUpdate&&this.onUpdate(this.ATRE,1);\n            if(this.repeats>0||this.infinity){\n                this.repeats>0&&--this.repeats;\n                this.progress = 0;\n                if(this.alternate){\n                    var sc = JC.copyJSON(this.ATRS);\n                    this.ATRS = JC.copyJSON(this.ATRE);\n                    this.ATRE = sc;\n                }else{\n                    this.element.setVal(this.ATRS);\n                }\n            }else{\n                this.living = false;\n                this.onCompelete&&this.onCompelete();\n            }\n        }\n    };\n    PathMotion.prototype.nextPose = function(){\n        var cache = {};\n        // for(var i in this.ATRE){\n        //     cache[i] = JC.TWEEN[this.ease]( this.progress , this.ATRS[i] , this.ATRE[i] - this.ATRS[i] , this.duration );\n        //     if(this.element[i]!==undefined)this.element[i] = cache[i];\n        // }\n        var t = JC.TWEEN[this.ease]( this.progress , 0 , 1 , this.duration );\n        var pos = this.getPoint(t,this.points);\n        cache.x = pos.x;\n        cache.y = pos.y;\n        // cache.y = pos.y;\n        if(this.attachNormal){\n            cache.rotate = this.decomposeRotate(t);\n        }\n        return cache;//this.onUpdate\n    };\n    PathMotion.prototype.getPoint = function(t, points) {\n        var a = points,\n            len = a.length,\n            rT = 1 - t,\n            l = a.slice(0, len - 1),\n            r = a.slice(1),\n            oP = {};\n        if (len > 3) {\n            var oL = this.getPoint(t, l),\n                oR = this.getPoint(t, r);\n            oP.x = rT * oL.x + t * oR.x;\n            oP.y = rT * oL.y + t * oR.y;\n            // oP.z = rT * oL.z + t * oR.z;\n            return oP;\n        } else {\n            oP.x = rT * rT * points[0].x + 2 * t * rT * points[1].x + t * t * points[2].x;\n            oP.y = rT * rT * points[0].y + 2 * t * rT * points[1].y + t * t * points[2].y;\n            // oP.z = rT * rT * points[0].z + 2 * t * rT * points[1].z + t * t * points[2].z;\n            return oP;\n        }\n    };\n    PathMotion.prototype.decomposeRotate = function(t) {\n        var p1 = this.getPoint(t,this.points);\n        var p2 = this.getPoint(t+0.01,this.points);\n        var deg = p1.xxxxx+p2.x;\n    };\n    \n    /**\n     * Animator类型动画对象\n     *\n     * @class\n     * @memberof JC\n     */\n    function Animator(){\n        this.start = false;\n        this.animates = [];\n    }\n    JC.Animator = Animator;\n    Animator.prototype.update = function(snippet){\n        for(var i=0;i<this.animates.length;i++){\n            if(!this.animates[i].living)this.animates.splice(i,1);\n            this.animates[i]&&this.animates[i].update(snippet);\n        }\n    };\n    Animator.prototype.fromTo = function(opts){\n        var animate = new JC.Transition(opts);\n        this.animates.push(animate);\n        return animate;\n    };\n    Animator.prototype.keyFrames = function(opts){\n        var animate = new JC.Animation(opts);\n        this.animates.push(animate);\n        return animate;\n    };\n    \n    \n    \n    \n    \n    \n    \n    \n\n    /**\n     * The Point object represents a location in a two-dimensional coordinate system, where x represents\n     * the horizontal axis and y represents the vertical axis.\n     *\n     * @class\n     * @memberof PIXI\n     * @param [x=0] {number} position of the point on the x axis\n     * @param [y=0] {number} position of the point on the y axis\n     */\n    function Point(x, y)\n    {\n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.x = x || 0;\n    \n        /**\n         * @member {number}\n         * @default 0\n         */\n        this.y = y || 0;\n    }\n    \n    JC.Point = Point;\n    Point.prototype.constructor = JC.Point;\n    \n    /**\n     * Creates a clone of this point\n     *\n     * @return {PIXI.Point} a copy of the point\n     */\n    Point.prototype.clone = function ()\n    {\n        return new Point(this.x, this.y);\n    };\n    \n    /**\n     * Copies x and y from the given point\n     *\n     * @param p {PIXI.Point}\n     */\n    Point.prototype.copy = function (p) {\n        this.set(p.x, p.y);\n    };\n    \n    /**\n     * Returns true if the given point is equal to this point\n     *\n     * @param p {PIXI.Point}\n     * @returns {boolean}\n     */\n    Point.prototype.equals = function (p) {\n        return (p.x === this.x) && (p.y === this.y);\n    };\n    \n    /**\n     * Sets the point to a new x and y position.\n     * If y is omitted, both x and y will be set to x.\n     *\n     * @param [x=0] {number} position of the point on the x axis\n     * @param [y=0] {number} position of the point on the y axis\n     */\n    Point.prototype.set = function (x, y)\n    {\n        this.x = x || 0;\n        this.y = y || ( (y !== 0) ? this.x : 0 ) ;\n    };\n    \n    \n    /**\n     * 矩阵对象，用来描述和记录对象的tansform 状态信息\n     *\n     * @class\n     * @memberof JC\n     */\n    function Matrix(){\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n    }\n    JC.Matrix = Matrix;\n    Matrix.prototype.constructor = JC.Matrix;\n    \n    /**\n     * 从数组设置一个矩阵\n     *\n     * @param array {number[]}\n     */\n    Matrix.prototype.fromArray = function(array){\n        this.a = array[0];\n        this.b = array[1];\n        this.c = array[3];\n        this.d = array[4];\n        this.tx = array[2];\n        this.ty = array[5];\n    };\n    \n    /**\n     * 将对象的数据以数组的形式导出\n     *\n     * @param transpose {boolean} 是否对矩阵进行转置\n     * @return {number[]} 返回数组\n     */\n    Matrix.prototype.toArray = function(transpose){\n        if(!this.array) this.array = new JC.Float32Array(9);\n        var array = this.array;\n    \n        if(transpose){\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        }else{\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n        return array;\n    };\n    \n    /**\n     * 将坐标点与矩阵左乘\n     *\n     * @param pos {object} 原始点\n     * @param newPos {object} 变换之后的点\n     * @return {object} 返回数组\n     */\n    Matrix.prototype.apply = function(pos, newPos){\n        newPos = newPos || {};\n        newPos.x = this.a * pos.x + this.c * pos.y + this.tx;\n        newPos.y = this.b * pos.x + this.d * pos.y + this.ty;\n        return newPos;\n    };\n    /**\n     * 将坐标点与转置矩阵左乘\n     *\n     * @param pos {object} 原始点\n     * @param newPos {object} 变换之后的点\n     * @return {object} 变换之后的点\n     */\n    Matrix.prototype.applyInverse = function(pos, newPos){\n        var id = 1 / (this.a * this.d + this.c * -this.b);\n        newPos.x = this.d * id * pos.x + -this.c * id * pos.y + (this.ty * this.c - this.tx * this.d) * id;\n        newPos.y = this.a * id * pos.y + -this.b * id * pos.x + (-this.ty * this.a + this.tx * this.b) * id;\n        return newPos;\n    };\n    /**\n     * 位移操作\n     *\n     * @return {this} \n     */\n    Matrix.prototype.translate = function(x, y){\n        this.tx += x;\n        this.ty += y;\n        return this;\n    };\n    /**\n     * 缩放操作\n     *\n     * @return {this} \n     */\n    Matrix.prototype.scale = function(x, y){\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n        return this;\n    };\n    /**\n     * 旋转操作\n     *\n     * @return {this} \n     */\n    Matrix.prototype.rotate = function(angle){\n        var cos = Math.cos( angle );\n        var sin = Math.sin( angle );\n        var a1 = this.a;\n        var c1 = this.c;\n        var tx1 = this.tx;\n        this.a = a1 * cos-this.b * sin;\n        this.b = a1 * sin+this.b * cos;\n        this.c = c1 * cos-this.d * sin;\n        this.d = c1 * sin+this.d * cos;\n        this.tx = tx1 * cos - this.ty * sin;\n        this.ty = tx1 * sin + this.ty * cos;\n        return this;\n    };\n    /**\n     * 矩阵相乘\n     *\n     * @return {this} \n     */\n    Matrix.prototype.append = function(matrix){\n        var a1 = this.a;\n        var b1 = this.b;\n        var c1 = this.c;\n        var d1 = this.d;\n        this.a  = matrix.a * a1 + matrix.b * c1;\n        this.b  = matrix.a * b1 + matrix.b * d1;\n        this.c  = matrix.c * a1 + matrix.d * c1;\n        this.d  = matrix.c * b1 + matrix.d * d1;\n        this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n        this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n        return this;\n    };\n    /**\n     * 单位矩阵\n     *\n     * @return {this} \n     */\n    Matrix.prototype.identity = function(){\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n        return this;\n    };\n    /**\n     * 快速设置矩阵各个分量\n     *\n     * @return {this} \n     */\n    Matrix.prototype.setTransform = function (x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY)\n    {\n        var a, b, c, d, sr, cr, cy, sy, nsx, cx;\n    \n        sr  = Math.sin(rotation);\n        cr  = Math.cos(rotation);\n        cy  = Math.cos(skewY);\n        sy  = Math.sin(skewY);\n        nsx = -Math.sin(skewX);\n        cx  =  Math.cos(skewX);\n    \n        a  =  cr * scaleX;\n        b  =  sr * scaleX;\n        c  = -sr * scaleY;\n        d  =  cr * scaleY;\n    \n        this.a  = cy * a + sy * c;\n        this.b  = cy * b + sy * d;\n        this.c  = nsx * a + cx * c;\n        this.d  = nsx * b + cx * d;\n    \n        this.tx = x + ( pivotX * a + pivotY * c );\n        this.ty = y + ( pivotX * b + pivotY * d );\n    \n        return this;\n    };\n    JC.IDENTITY = new Matrix();\n    JC.TEMP_MATRIX = new Matrix();\n    \n\n    JC.BaseTextureCache = {};\n    function BaseTexture(source, scaleMode) {\n        JC.Eventer.call(this);\n    \n        this.width = 100;\n    \n        this.height = 100;\n    \n        this.realWidth = 100;\n    \n        this.realHeight = 100;\n    \n        this.scaleMode = scaleMode || CONST.SCALE_MODES.DEFAULT;\n    \n        this.hasLoaded = false;\n    \n        this.isLoading = false;\n    \n        this.source = null; // set in loadSource, if at all\n    \n        this.resolution = 1;\n    \n        this.premultipliedAlpha = true;\n    \n        this.imageUrl = null;\n    \n        this.isPowerOfTwo = false;\n    \n        this.mipmap = false;\n    \n        // this._glTextures = {};\n    \n        // if no source passed don't try to load\n        if (source) {\n            this.loadSource(source);\n        }\n    \n    }\n    \n    BaseTexture.prototype = Object.create(JC.Eventer.prototype);\n    BaseTexture.prototype.constructor = BaseTexture;\n    \n    BaseTexture.prototype.update = function() {\n        this.realWidth = this.source.naturalWidth || this.source.width;\n        this.realHeight = this.source.naturalHeight || this.source.height;\n    \n        this.width = this.realWidth / this.resolution;\n        this.height = this.realHeight / this.resolution;\n    \n        this.isPowerOfTwo = utils.isPowerOfTwo(this.realWidth, this.realHeight);\n    \n        this.emit({ type: 'update' });\n    };\n    \n    BaseTexture.prototype.loadSource = function(source) {\n        var wasLoading = this.isLoading;\n        this.hasLoaded = false;\n        this.isLoading = false;\n    \n        this.source = source;\n    \n        if ((this.source.complete || this.source.getContext) && this.source.width && this.source.height) {\n            this._sourceLoaded();\n        } else if (!source.getContext) {\n            this.isLoading = true;\n    \n            var This = this;\n    \n            source.onload = function() {\n                source.onload = null;\n                source.onerror = null;\n    \n                This.isLoading = false;\n                This._sourceLoaded();\n                This.emit({ type: 'loaded' });\n            };\n    \n            source.onerror = function() {\n                source.onload = null;\n                source.onerror = null;\n    \n                This.isLoading = false;\n                This.emit({ type: 'error' });\n            };\n    \n            if (source.complete && source.src) {\n                this.isLoading = false;\n    \n                source.onload = null;\n                source.onerror = null;\n    \n                if (source.width && source.height) {\n                    this._sourceLoaded();\n    \n                    // If any previous subscribers possible\n                    if (wasLoading) {\n                        this.emit({ type: 'loaded' });\n                    }\n                } else {\n                    // If any previous subscribers possible\n                    if (wasLoading) {\n                        this.emit({ type: 'error' });\n                    }\n                }\n            }\n        }\n    };\n    \n    BaseTexture.prototype._sourceLoaded = function() {\n        this.hasLoaded = true;\n        this.update();\n    };\n    BaseTexture.fromImage = function (imageUrl, crossorigin, scaleMode)\n    {\n        var baseTexture = JC.BaseTextureCache[imageUrl];\n    \n        if (crossorigin === undefined && imageUrl.indexOf('data:') !== 0)\n        {\n            crossorigin = true;\n        }\n    \n        if (!baseTexture)\n        {\n            var image = new Image();\n            if (crossorigin)\n            {\n                image.crossOrigin = '';\n            }\n    \n            baseTexture = new BaseTexture(image, scaleMode);\n            baseTexture.imageUrl = imageUrl;\n    \n            image.src = imageUrl;\n    \n            JC.BaseTextureCache[imageUrl] = baseTexture;\n    \n        }\n    \n        return baseTexture;\n    };\n    \n    function Texture(baseTexture, frame) {\n        JC.Eventer.call(this);\n    \n        this.noFrame = false;\n    \n        if (!frame) {\n            this.noFrame = true;\n            frame = new math.Rectangle(0, 0, 1, 1);\n        }\n    \n        if (baseTexture instanceof Texture) {\n            baseTexture = baseTexture.baseTexture;\n        }\n    \n        this.baseTexture = baseTexture;\n    \n        this._frame = frame;\n    \n        this.valid = false;\n    \n        this.requiresUpdate = false;\n    \n        this._uvs = null;\n    \n        this.width = 0;\n    \n        this.height = 0;\n    \n        if (baseTexture.hasLoaded) {\n            if (this.noFrame) {\n                frame = new math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n    \n                // if there is no frame we should monitor for any base texture changes..\n                baseTexture.on('update', this.onBaseTextureUpdated, this);\n            }\n            this.frame = frame;\n        } else {\n            baseTexture.once('loaded', this.onBaseTextureLoaded, this);\n        }\n    \n    }\n    \n    Texture.prototype = Object.create(JC.Eventer.prototype);\n    Texture.prototype.constructor = Texture;\n    \n    Object.defineProperties(Texture.prototype, {\n        frame: {\n            get: function() {\n                return this._frame;\n            },\n            set: function(frame) {\n                this._frame = frame;\n    \n                this.noFrame = false;\n    \n                this.width = frame.width;\n                this.height = frame.height;\n    \n                this.valid = frame && frame.width && frame.height && this.baseTexture.hasLoaded;\n    \n                if (this.valid) {\n                    this._updateUvs();\n                }\n            }\n        }\n    });\n    \n    Texture.prototype.update = function() {\n        this.baseTexture.update();\n    };\n    \n    Texture.prototype.onBaseTextureLoaded = function(baseTexture) {\n        // TODO this code looks confusing.. boo to abusing getters and setterss!\n        if (this.noFrame) {\n            this.frame = new math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n        } else {\n            this.frame = this._frame;\n        }\n    \n        this.emit('update', this);\n    };\n    \n    Texture.prototype.onBaseTextureUpdated = function(baseTexture) {\n        this._frame.width = baseTexture.width;\n        this._frame.height = baseTexture.height;\n    \n        this.emit('update', this);\n    };\n    \n    Texture.prototype._updateUvs = function() {\n        if (!this._uvs) {\n            this._uvs = new TextureUvs();\n        }\n        this._uvs.set(this.frame, this.baseTexture);\n    };\n    \n    Texture.fromImage = function(imageUrl, crossorigin, scaleMode) {\n        var texture = JC.UTILS.TextureCache[imageUrl];\n    \n        if (!texture) {\n            texture = new Texture(BaseTexture.fromImage(imageUrl, crossorigin, scaleMode));\n            JC.UTILS.TextureCache[imageUrl] = texture;\n        }\n    \n        return texture;\n    };\n    \n    Texture.fromCanvas = function(canvas, scaleMode) {\n        return new Texture(BaseTexture.fromCanvas(canvas, scaleMode));\n    };\n    \n    \n    function TextureUvs() {\n        this.x0 = 0;\n        this.y0 = 0;\n    \n        this.x1 = 1;\n        this.y1 = 0;\n    \n        this.x2 = 1;\n        this.y2 = 1;\n    \n        this.x3 = 0;\n        this.y3 = 1;\n    }\n    \n    TextureUvs.prototype.set = function(frame, baseFrame) {\n        var tw = baseFrame.width;\n        var th = baseFrame.height;\n    \n            this.x0 = frame.x / tw;\n            this.y0 = frame.y / th;\n    \n            this.x1 = (frame.x + frame.width) / tw;\n            this.y1 = frame.y / th;\n    \n            this.x2 = (frame.x + frame.width) / tw;\n            this.y2 = (frame.y + frame.height) / th;\n    \n            this.x3 = frame.x / tw;\n            this.y3 = (frame.y + frame.height) / th;\n    };\n    \n\n    \n    /**\n     * 显示对象的基类\n     *\n     * @class\n     * @memberof JC\n     */\n    function DisplayObject(){\n        this._ready = true;\n    \n        this.visible = true;\n        this.worldAlpha = 1;\n        this.alpha = 1;\n    \n        this.scaleX = 1;\n        this.scaleY = 1;\n    \n        this.skewX = 0;\n        this.skewY = 0;\n    \n        this.rotation = 0;\n        this.rotationCache = 0;\n        this._sr = 0;\n        this._cr = 1;\n        \n        this.x = 0;\n        this.y = 0;\n        \n        this.pivotX = 0;\n        this.pivotY = 0;\n    \n        this.mask = null;\n    \n        this.parent = null;\n        this.worldTransform = new JC.Matrix();\n    \n        this.event = new JC.Eventer();\n        this.passEvent = false;\n        this.bound = [];\n    \n    \n        this.Animator = new JC.Animator();\n    }\n    JC.DisplayObject = DisplayObject;\n    DisplayObject.prototype.constructor = JC.DisplayObject;\n    \n    Object.defineProperty(DisplayObject.prototype, 'scale', {\n        get: function() {\n            return this.scaleX;\n        },\n        set: function(scale) {\n            this.scaleX = this.scaleY = scale;\n        }\n    });\n    \n    /**\n     * fromTo动画，指定动画的启始位置和结束位置\n     *\n     * ```js\n     * // 扩展缓动函数，缓动函数库详见目录下的util/tween.js\n     * JC.TWEEN.extend({    \n     *    bounceOut: function(t, b, c, d){\n     *        if ((t/=d) < (1/2.75)) {\n     *            return c*(7.5625*t*t) + b;\n     *        } else if (t < (2/2.75)) {\n     *            return c*(7.5625*(t-=(1.5/2.75))*t + 0.75) + b;\n     *        } else if (t < (2.5/2.75)) {\n     *            return c*(7.5625*(t-=(2.25/2.75))*t + 0.9375) + b;\n     *        }\n     *        return c*(7.5625*(t-=(2.625/2.75))*t + 0.984375) + b;\n     *    }\n     * });\n     * var dispayObj = new JC.Text('Hello JC','bold 36px Arial','#c32361');\n     * dispayObj.fromTo({\n     *   from: {x: 100},\n     *   to: {x: 200},\n     *   ease: 'bounceOut', // 执行动画使用的缓动函数 默认值为 easeBoth\n     *   repeats: 10, // 动画运动完后再重复10次\n     *   infinity: true, // 无限循环动画\n     *   alternate: true, // 偶数次的时候动画回放\n     *   duration: 1000, // 动画时长 ms单位 默认 300ms\n     *   onUpdate: function(state,rate){},\n     *   onCompelete: function(){ console.log('end'); } // 动画执行结束回调\n     * });\n     * ```\n     *\n     * @param opts {object} 配置\n     * @param clear {boolean} 是否去掉之前的动画\n     */\n    DisplayObject.prototype.fromTo = function(opts,clear){\n        opts.element = this;\n        this.setVal(opts.from);\n        if(clear)this.Animator.animates.length = 0;\n        return this.Animator.fromTo(opts);\n    };\n    \n    /**\n     * to动画，物体当前位置为动画的启始位置，只需制定动画的结束位置\n     *\n     * @param opts {object} 配置\n     * @param clear {boolean} 是否去掉之前的动画\n     */\n    DisplayObject.prototype.to = function(opts,clear){\n        opts.element = this;\n        opts.from = {};\n        for(var i in opts.to){\n            opts.from[i] = this[i];\n        }\n        if(clear)this.Animator.animates.length = 0;\n        return this.Animator.fromTo(opts);\n    };\n    \n    /**\n     * keyFrames动画，设置物体动画的keyframe，可以为相邻的两个keyFrames之前配置差值时间及时间函数\n     *\n     * @param opts {object} 配置\n     * @param clear {boolean} 是否去掉之前的动画\n     */\n    DisplayObject.prototype.keyFrames = function(opts,clear){\n        opts.element = this;\n        if(clear)this.Animator.animates.length = 0;\n        return this.Animator.keyFrames(opts);\n    };\n    \n    /**\n     * 检测是否可见\n     *\n     * @method isVisible\n     * @private\n     */\n    DisplayObject.prototype.isVisible = function(){\n        return !!(this.visible && this.alpha>0 && this.scaleX*this.scaleY>0);\n    };\n    \n    DisplayObject.prototype.setVal = function(vals){\n        if(vals===undefined)return;\n        for(var key in vals){\n            if(this[key]===undefined){\n                continue;\n            }else{\n                this[key] = vals[key];\n            }\n        }\n    };\n    DisplayObject.prototype.updateMe = function(){\n        var pt = this.parent.worldTransform;\n        var wt = this.worldTransform;\n    \n        var a, b, c, d, tx, ty;\n    \n        if(this.skewX || this.skewY){\n    \n            JC.TEMP_MATRIX.setTransform(\n                this.x,\n                this.y,\n                this.pivotX,\n                this.pivotY,\n                this.scaleX,\n                this.scaleY,\n                this.rotation,\n                this.skewX,\n                this.skewY\n            );\n    \n            wt.a  = JC.TEMP_MATRIX.a  * pt.a + JC.TEMP_MATRIX.b  * pt.c;\n            wt.b  = JC.TEMP_MATRIX.a  * pt.b + JC.TEMP_MATRIX.b  * pt.d;\n            wt.c  = JC.TEMP_MATRIX.c  * pt.a + JC.TEMP_MATRIX.d  * pt.c;\n            wt.d  = JC.TEMP_MATRIX.c  * pt.b + JC.TEMP_MATRIX.d  * pt.d;\n            wt.tx = JC.TEMP_MATRIX.tx * pt.a + JC.TEMP_MATRIX.ty * pt.c + pt.tx;\n            wt.ty = JC.TEMP_MATRIX.tx * pt.b + JC.TEMP_MATRIX.ty * pt.d + pt.ty;\n        }else{\n            if(this.rotation % 360){\n                if(this.rotation !== this.rotationCache){\n                    this.rotationCache = this.rotation;\n                    this._sr = Math.sin(this.rotation*JC.DTR);\n                    this._cr = Math.cos(this.rotation*JC.DTR);\n                }\n    \n                a  =  this._cr * this.scaleX;\n                b  =  this._sr * this.scaleX;\n                c  = -this._sr * this.scaleY;\n                d  =  this._cr * this.scaleY;\n                tx =  this.x;\n                ty =  this.y;\n    \n                if(this.pivotX || this.pivotY){\n                    tx -= this.pivotX * a + this.pivotY * c;\n                    ty -= this.pivotX * b + this.pivotY * d;\n                }\n                wt.a  = a  * pt.a + b  * pt.c;\n                wt.b  = a  * pt.b + b  * pt.d;\n                wt.c  = c  * pt.a + d  * pt.c;\n                wt.d  = c  * pt.b + d  * pt.d;\n                wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n                wt.ty = tx * pt.b + ty * pt.d + pt.ty; \n            }else{\n                a  = this.scaleX;\n                d  = this.scaleY;\n    \n                tx = this.x - this.pivotX * a;\n                ty = this.y - this.pivotY * d;\n    \n                wt.a  = a  * pt.a;\n                wt.b  = a  * pt.b;\n                wt.c  = d  * pt.c;\n                wt.d  = d  * pt.d;\n                wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n                wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n            }\n        }\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n    };\n    \n    DisplayObject.prototype.upAnimation = function(snippet){\n        this.Animator.update(snippet);\n    };\n    DisplayObject.prototype.setTransform = function(ctx){\n        var matrix = this.worldTransform;\n        ctx.globalAlpha = this.worldAlpha;\n        ctx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);\n    };\n    /**\n     * 获取物体相对于canvas世界坐标系的坐标位置\n     *\n     * @return {object}\n     */\n    DisplayObject.prototype.getGlobalPos = function(){\n        return {x: this.worldTransform.x,y: this.worldTransform.y};\n    };\n    /**\n     * 显示对象的事件绑定函数\n     *\n     * @param type {String} 事件类型\n     * @param fn {Function} 回调函数\n     */\n    DisplayObject.prototype.on = function(type,fn){\n        this.event.on(type,fn);\n    };\n    /**\n     * 显示对象的事件解绑函数\n     *\n     * @param type {String} 事件类型\n     * @param fn {Function} 注册时回调函数的引用\n     */\n    DisplayObject.prototype.off = function(type,fn){\n        this.event.off(type,fn);\n    };\n    /**\n     * 显示对象的一次性事件绑定函数\n     *\n     * @param type {String} 事件类型\n     * @param fn {Function} 回调函数\n     */\n    DisplayObject.prototype.once = function(type,fn){\n        var This = this,\n            cb = function(ev){\n                fn&&fn(ev);\n                This.event.off(type,cb);\n            };\n        this.event.on(type,cb);\n    };\n    /**\n     * 获取当前坐标系下的监测区域\n     *\n     * @method getBound\n     * @private\n     */\n    DisplayObject.prototype.getBound = function (){\n        var bound = [],\n            l = this.bound.length>>1;\n    \n        for (var i = 0; i < l; i++) {\n            var p = this.worldTransform.apply({x: this.bound[i*2],y: this.bound[i*2+1]});\n            bound[i*2  ] = p.x;\n            bound[i*2+1] = p.y;\n        }\n        return bound;\n    };\n    /**\n     * 设置显示对象的监测区域\n     *\n     * @param points {Array} 区域的坐标点 [x0,y0 ..... xn,yn]\n     * @param needless {boolean} 当该值为true，当且仅当this.bound为空时才会更新点击区域。默认为false，总是更新点击区域。\n     * @return {Array}\n     */\n    DisplayObject.prototype.setBound = function (points,needless){\n        var l = this.bound.length;\n        if(l>4&&needless)return;\n        points = points||[\n            -this.regX,this.regY,\n            -this.regX,this.regY-this.height,\n            -this.regX+this.width,this.regY-this.height,\n            -this.regX+this.width,this.regY\n        ];\n        this.bound = points;\n    };\n    DisplayObject.prototype.ContainsPoint = function (p,px,py){\n        var n = p.length>>1;\n        var ax, ay = p[2*n-3]-py, bx = p[2*n-2]-px, by = p[2*n-1]-py;\n        \n        //var lup = by > ay;\n        for(var i=0; i<n; i++){\n            ax = bx;  ay = by;\n            bx = p[2*i  ] - px;\n            by = p[2*i+1] - py;\n            if(ay==by) continue;\n            lup = by>ay;\n        }\n        \n        var depth = 0;\n        for(i=0; i<n; i++){\n            ax = bx;  ay = by;\n            bx = p[2*i  ] - px;\n            by = p[2*i+1] - py;\n            if(ay< 0 && by< 0) continue;\n            if(ay> 0 && by> 0) continue;\n            if(ax< 0 && bx< 0) continue;\n            \n            if(ay==by && Math.min(ax,bx)<=0) return true;\n            if(ay==by) continue;\n            \n            var lx = ax + (bx-ax)*(-ay)/(by-ay);\n            if(lx===0) return true;\n            if(lx> 0) depth++;\n            if(ay===0 &&  lup && by>ay) depth--;\n            if(ay===0 && !lup && by<ay) depth--;\n            lup = by>ay;\n        }\n        return (depth & 1) == 1;\n    };\n    \n    \n    \n    /**\n     * 显示对象容器，继承至DisplayObject\n     *\n     * ```js\n     * var container = new JC.Container();\n     * container.addChilds(sprite);\n     * ```\n     *\n     * @class\n     * @extends JC.DisplayObject\n     * @memberof JC\n     */\n    function Container(){\n        JC.DisplayObject.call( this );\n        this.cds = [];\n        this.timeScale = 1;\n        this.paused = false;\n    }\n    JC.Container = Container;\n    Container.prototype = Object.create( JC.DisplayObject.prototype );\n    Container.prototype.constructor = JC.Container;\n    \n    /**\n     * 向容器添加一个物体\n     * \n     * ```js\n     * container.addChilds(sprite,sprite2,text3,graphice);\n     * ```\n     *\n     * @param child {JC.Container}\n     * @return {JC.Container}\n     */\n    Container.prototype.addChilds = function (cd){\n        if(cd === undefined)return cd;\n        var l = arguments.length;\n        if(l > 1){\n            for (var i=0; i<l; i++) { this.addChilds(arguments[i]); }\n            return arguments[l-1];\n        }\n        if(cd.parent){ cd.parent.removeChilds(cd); }\n        cd.parent = this;\n        this.cds.push(cd);\n        return cd;\n    };\n    /**\n     * 从容器移除一个物体\n     * \n     * ```js\n     * container.removeChilds(sprite,sprite2,text3,graphice);\n     * ```\n     *\n     * @param child {JC.Container}\n     * @return {JC.Container}\n     */\n    Container.prototype.removeChilds = function (){\n        var l = arguments.length;\n        if(l > 1){\n            for (var i=0; i<l; i++) { this.removeChilds(arguments[i]); }\n        }else if(l===1){\n            for(var a=0;a<this.cds.length;a++){\n                if(this.cds[a]===arguments[0]){\n                    this.cds.splice(a,1);\n                    this.cds[a].parent = null;\n                    a--;\n                }\n            }\n        }\n    };\n    Container.prototype.updateTransform = function (snippet){\n        if(!this._ready)return;\n        snippet = this.timeScale*snippet;\n        !this.paused&&this.upAnimation(snippet);\n        this.updateMe();\n        this.cds.length>0&&this.updateChilds(snippet);\n    };\n    Container.prototype.updateChilds = function (snippet){\n        for (var i=0,l=this.cds.length; i<l; i++) {\n            var cd = this.cds[i];\n            cd.updateTransform(snippet);\n        }\n    };\n    Container.prototype.render = function (ctx){\n        ctx.save();\n        this.setTransform(ctx);\n        this.mask&&this.mask.render(ctx);\n        this.renderMe(ctx);\n        this.cds.length>0&&this.renderChilds(ctx);\n        ctx.restore();\n    };\n    Container.prototype.renderMe = function (){\n        return true;\n    };\n    Container.prototype.renderChilds = function (ctx){\n        for (var i=0,l=this.cds.length; i<l; i++) {\n            var cd = this.cds[i];\n            if (!cd.isVisible()||!cd._ready)continue;\n            cd.render(ctx);\n        }\n    };\n    Container.prototype.noticeEvent = function (ev){\n        var i = this.cds.length-1;\n        while(i>=0){\n            var child = this.cds[i];\n            if(child.visible){\n                child.noticeEvent(ev);\n                if(ev.target)break;\n            }\n            i--;\n        }\n        this.upEvent(ev);\n    };\n    Container.prototype.upEvent = function(ev){\n        if(!this._ready)return;\n        if(ev.target||(!this.passEvent&&this.hitTest(ev))){\n            if(!ev.cancleBubble||ev.target===this){\n                if(!(this.event.listeners[ev.type]&&this.event.listeners[ev.type].length>0))return;\n                this.event.emit(ev);\n            }\n        }\n    };\n    Container.prototype.hitTest = function(ev){\n        if (ev.type==='touchmove'||ev.type==='touchend'||ev.type==='mousemove'||ev.type==='mouseup'){\n            var re = this.event.touchstarted;\n            if(re)ev.target = this;\n            if(ev.type==='touchend'||ev.type==='mouseup')this.event.touchstarted = false;\n            return re;\n        }\n        if(this.hitTestMe(ev)){\n            ev.target = this;\n            if(ev.type==='touchstart'||ev.type==='mousedown')this.event.touchstarted = true;\n            return true;\n        }\n        return false;\n    };\n    Container.prototype.hitTestMe = function(ev){\n        return this.ContainsPoint(this.getBound(),ev.global.x,ev.global.y);\n    };\n    Container.prototype.pause = function(){\n        this.paused = true;\n    };\n    Container.prototype.start = function(){\n        this.paused = false;\n    };\n    Container.prototype.cancle = function(){\n        this.Animator.animates.length = 0;\n    };\n    \n\n    function Sprite(texture) {\n        JC.Container.call(this);\n    \n        /**\n         * The anchor sets the origin point of the texture.\n         * The default is 0,0 this means the texture's origin is the top left\n         * Setting the anchor to 0.5,0.5 means the texture's origin is centered\n         * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner\n         *\n         * @member {PIXI.Point}\n         */\n        this.anchor = new JC.Point();\n    \n        /**\n         * The texture that the sprite is using\n         *\n         * @member {PIXI.Texture}\n         * @private\n         */\n        this._texture = null;\n    \n        /**\n         * The width of the sprite (this is initially set by the texture)\n         *\n         * @member {number}\n         * @private\n         */\n        this._width = 0;\n    \n        /**\n         * The height of the sprite (this is initially set by the texture)\n         *\n         * @member {number}\n         * @private\n         */\n        this._height = 0;\n    \n        /**\n         * The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n         *\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        this.tint = 0xFFFFFF;\n    \n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        this.blendMode = JC.CONST.BLEND_MODES.NORMAL;\n    \n        /**\n         * The shader that will be used to render the sprite. Set to null to remove a current shader.\n         *\n         * @member {PIXI.AbstractFilter|PIXI.Shader}\n         */\n        this.shader = null;\n    \n        /**\n         * An internal cached value of the tint.\n         *\n         * @member {number}\n         * @default 0xFFFFFF\n         */\n        this.cachedTint = 0xFFFFFF;\n    \n        // call texture setter\n        this.texture = texture;\n    }\n    \n    // constructor\n    JC.Sprite = Sprite;\n    Sprite.prototype = Object.create(JC.Container.prototype);\n    Sprite.prototype.constructor = JC.Sprite;\n    \n    Object.defineProperties(Sprite.prototype, {\n        /**\n         * The width of the sprite, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.Sprite#\n         */\n        width: {\n            get: function() {\n                return Math.abs(this.scale.x) * this.texture._frame.width;\n            },\n            set: function(value) {\n                var sign = utils.sign(this.scale.x) || 1;\n                this.scale.x = sign * value / this.texture._frame.width;\n                this._width = value;\n            }\n        },\n    \n        /**\n         * The height of the sprite, setting this will actually modify the scale to achieve the value set\n         *\n         * @member {number}\n         * @memberof PIXI.Sprite#\n         */\n        height: {\n            get: function() {\n                return Math.abs(this.scale.y) * this.texture._frame.height;\n            },\n            set: function(value) {\n                var sign = utils.sign(this.scale.y) || 1;\n                this.scale.y = sign * value / this.texture._frame.height;\n                this._height = value;\n            }\n        },\n    \n        /**\n         * The texture that the sprite is using\n         *\n         * @member {PIXI.Texture}\n         * @memberof PIXI.Sprite#\n         */\n        texture: {\n            get: function() {\n                return this._texture;\n            },\n            set: function(value) {\n                if (this._texture === value) {\n                    return;\n                }\n    \n                this._texture = value;\n                this.cachedTint = 0xFFFFFF;\n    \n                if (value) {\n                    // wait for the texture to load\n                    if (value.baseTexture.hasLoaded) {\n                        this._onTextureUpdate();\n                    } else {\n                        value.once('update', this._onTextureUpdate, this);\n                    }\n                }\n            }\n        }\n    });\n    \n    /**\n     * When the texture is updated, this event will fire to update the scale and frame\n     *\n     * @private\n     */\n    Sprite.prototype.upTexture = function() {\n        this._textureW = opts.texture.width;\n        this._textureH = opts.texture.height;\n        this.width = opts.width || this._textureW;\n        this.height = opts.height || this._textureH;\n        this.regX = this.width >> 1;\n        this.regY = this.height >> 1;\n        this.setBound(null, true);\n    };\n    \n    /**\n     *\n     * Renders the object using the WebGL renderer\n     *\n     * @param renderer {PIXI.WebGLRenderer}\n     * @private\n     */\n    Sprite.prototype.render = function(renderer) {\n        renderer.setObjectRenderer(renderer.plugins.sprite);\n        renderer.plugins.sprite.render(this);\n    };\n    \n    /**\n     * Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account.\n     *\n     * @param matrix {PIXI.Matrix} the transformation matrix of the sprite\n     * @return {PIXI.Rectangle} the framing rectangle\n     */\n    Sprite.prototype.getBounds = function(matrix) {\n    \n    };\n    \n    /**\n     * Gets the local bounds of the sprite object.\n     *\n     */\n    Sprite.prototype.getLocalBounds = function() {};\n    \n    /**\n     * Tests if a point is inside this sprite\n     *\n     * @param point {PIXI.Point} the point to test\n     * @return {boolean} the result of the test\n     */\n    Sprite.prototype.containsPoint = function(point) {};\n    \n\n    function ParticleContainer(maxSize, properties, batchSize)\n    {\n        JC.Container.call(this);\n    \n        batchSize = batchSize || 15000; //CONST.SPRITE_BATCH_SIZE; // 2000 is a nice balance between mobile / desktop\n        maxSize = maxSize || 15000;\n    \n        // Making sure the batch size is valid\n        // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n        // so max number of particles is 65536 / 4 = 16384\n        var maxBatchSize = 16384;\n        if (batchSize > maxBatchSize) {\n            batchSize = maxBatchSize;\n        }\n    \n        if (batchSize > maxSize) {\n            batchSize = maxSize;\n        }\n    \n        /**\n         * Set properties to be dynamic (true) / static (false)\n         *\n         * @member {boolean[]}\n         * @private\n         */\n        this._properties = [false, true, false, false, false];\n    \n        /**\n         * @member {number}\n         * @private\n         */\n        this._maxSize = maxSize;\n    \n        /**\n         * @member {number}\n         * @private\n         */\n        this._batchSize = batchSize;\n    \n        /**\n         * @member {WebGLBuffer}\n         * @private\n         */\n        this._buffers = null;\n    \n        /**\n         * @member {number}\n         * @private\n         */\n        this._bufferToUpdate = 0;\n    \n        /**\n         * @member {boolean}\n         *\n         */\n        this.interactiveChildren = false;\n    \n        /**\n         * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n         *\n         * @member {number}\n         * @default PIXI.BLEND_MODES.NORMAL\n         * @see PIXI.BLEND_MODES\n         */\n        this.blendMode = JC.CONST.BLEND_MODES.NORMAL;\n    \n        this.setProperties(properties);\n    }\n    \n    JC.ParticleContainer = ParticleContainer;\n    ParticleContainer.prototype = Object.create(JC.Container.prototype);\n    ParticleContainer.prototype.constructor = JC.ParticleContainer;\n    \n    /**\n     * Sets the private properties array to dynamic / static based on the passed properties object\n     *\n     * @param properties {object} The properties to be uploaded\n     */\n    ParticleContainer.prototype.setProperties = function(properties)\n    {\n        if ( properties ) {\n            this._properties[0] = 'scale' in properties ? !!properties.scale : this._properties[0];\n            this._properties[1] = 'position' in properties ? !!properties.position : this._properties[1];\n            this._properties[2] = 'rotation' in properties ? !!properties.rotation : this._properties[2];\n            this._properties[3] = 'uvs' in properties ? !!properties.uvs : this._properties[3];\n            this._properties[4] = 'alpha' in properties ? !!properties.alpha : this._properties[4];\n        }\n    };\n    \n    ParticleContainer.prototype.updateTransform = function ()\n    {\n    \n        this.displayObjectUpdateTransform();\n    };\n    \n    ParticleContainer.prototype.render = function (renderer)\n    {\n        if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable)\n        {\n            return;\n        }\n    \n        renderer.setObjectRenderer( renderer.plugins.particle );\n        renderer.plugins.particle.render( this );\n    };\n    \n    \n\n    \n\n    return JC;\n\n}));","\n/**\n * 简单拷贝json对象\n *\n * @name copyJSON\n * @memberof JC\n * @property {JC.copyJSON}\n */\n \n// JC.copyJSON = ;\n\n/**\n * 将角度转化成弧度\n *\n * @name DTR\n * @memberof JC\n * @property {JC.DTR}\n */\n\n// JC.DTR = Math.PI/180;\n\n\n/**\n * 是否为数组\n *\n * @name isArray\n * @memberof JC\n * @property {JC.isArray}\n */\n// JC.isArray = ;\n\n/**\n * 是否为对象\n *\n * @name isObject\n * @memberof JC\n * @property {JC.isObject}\n */\n// JC.isObject = (function(){\n//     var ks = _rt({});\n//     return function(object){\n//         return Object.prototype.toString.call(object) === ks;\n//     };\n// })();\n\n/**\n * 是否为数字\n *\n * @name isNumber\n * @memberof JC\n * @property {JC.isNumber}\n */\n// JC.isNumber = (function(){\n//     var ks = _rt(1);\n//     return function(object){\n//         return Object.prototype.toString.call(object) === ks;\n//     };\n// })();\n\n/**\n * 是否为函数\n *\n * @name isFunction\n * @memberof JC\n * @property {JC.isFunction}\n */\n// JC.isFunction = (function(){\n//     var ks = _rt(function(){});\n//     return function(object){\n//         return Object.prototype.toString.call(object) === ks;\n//     };\n// })();\n\n/**\n * 强化的随机数\n *\n * @name random\n * @memberof JC\n * @property {JC.random}\n */\n\n// JC.random = function(min, max){\n//     if (JC.isArray(min))\n//         return min[~~(Math.random() * min.length)];\n//     if (!JC.isNumber(max))\n//         max = min || 1, min = 0;\n//     return min + Math.random() * (max - min);\n// };\n\n\n/**\n * 阿基米德求模\n *\n * @name euclideanModulo\n * @memberof JC\n * @property {JC.euclideanModulo}\n */\n\n// JC.euclideanModulo = function(n, m){\n//     return ((n % m) + m) % m;\n// };\n\nfunction _rt(val){\n    return Object.prototype.toString.call(val);\n}\n\nJC.UTILS = {\n\n    hex2rgb: function (hex, out)\n    {\n        out = out || [];\n\n        out[0] = (hex >> 16 & 0xFF) / 255;\n        out[1] = (hex >> 8 & 0xFF) / 255;\n        out[2] = (hex & 0xFF) / 255;\n\n        return out;\n    },\n\n    hex2string: function (hex)\n    {\n        hex = hex.toString(16);\n        hex = '000000'.substr(0, 6 - hex.length) + hex;\n\n        return '#' + hex;\n    },\n\n    rgb2hex: function (rgb)\n    {\n        return ((rgb[0]*255 << 16) + (rgb[1]*255 << 8) + rgb[2]*255);\n    },\n\n    getNextPowerOfTwo: function (number)\n    {\n        // see: http://en.wikipedia.org/wiki/Power_of_two#Fast_algorithm_to_check_if_a_positive_number_is_a_power_of_two\n        if (number > 0 && (number & (number - 1)) === 0)\n        {\n            return number;\n        }\n        else\n        {\n            var result = 1;\n\n            while (result < number)\n            {\n                result <<= 1;\n            }\n\n            return result;\n        }\n    },\n\n    isPowerOfTwo: function (width, height)\n    {\n        return (width > 0 && (width & (width - 1)) === 0 && height > 0 && (height & (height - 1)) === 0);\n    },\n\n    sayHi: function (type)\n    {\n        if (this._saidHi)\n        {\n            return;\n        }\n\n        if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1)\n        {\n            var args = [\n                '\\n %c %c %c jcw2d.js ' + JC.CONST.VERSION + ' - ✰ ' + type + ' ✰  %c ' + ' %c ' + ' http://www.jason82.com/  %c %c ♥%c♥%c♥ \\n\\n',\n                'background: #ff66a5; padding:5px 0;',\n                'background: #ff66a5; padding:5px 0;',\n                'color: #ff66a5; background: #030307; padding:5px 0;',\n                'background: #ff66a5; padding:5px 0;',\n                'background: #ffc3dc; padding:5px 0;',\n                'background: #ff66a5; padding:5px 0;',\n                'color: #ff2424; background: #fff; padding:5px 0;',\n                'color: #ff2424; background: #fff; padding:5px 0;',\n                'color: #ff2424; background: #fff; padding:5px 0;'\n            ];\n\n            window.console.log.apply(console, args); //jshint ignore:line\n        }\n        else if (window.console)\n        {\n            window.console.log('jcw2d.js ' + JC.CONST.VERSION + ' - ' + type + ' - http://www.jason82.com/'); //jshint ignore:line\n        }\n\n        this._saidHi = true;\n    },\n\n    isWebGLSupported: function ()\n    {\n        var contextOptions = { stencil: true };\n        try\n        {\n            if (!window.WebGLRenderingContext)\n            {\n                return false;\n            }\n\n            var canvas = document.createElement('canvas'),\n                gl = canvas.getContext('webgl', contextOptions) || canvas.getContext('experimental-webgl', contextOptions);\n\n            return !!(gl && gl.getContextAttributes().stencil);\n        }\n        catch (e)\n        {\n            return false;\n        }\n    },\n\n    sign: function (n)\n    {\n        return n ? (n < 0 ? -1 : 1) : 0;\n    },\n\n    removeItems: function (arr, startIdx, removeCount)\n    {\n        var length = arr.length;\n\n        if (startIdx >= length || removeCount === 0)\n        {\n            return;\n        }\n\n        removeCount = (startIdx+removeCount > length ? length-startIdx : removeCount);\n        for (var i = startIdx, len = length-removeCount; i < len; ++i)\n        {\n            arr[i] = arr[i + removeCount];\n        }\n\n        arr.length = len;\n    },\n\n    copyJSON: function(json){\n        return JSON.parse(JSON.stringify(json));\n    },\n\n    isArray: (function(){\n        var ks = _rt('s');\n        return function(object){\n            return Object.prototype.toString.call(object) === ks;\n        };\n    })(),\n\n    isObject: (function(){\n        var ks = _rt({});\n        return function(object){\n            return Object.prototype.toString.call(object) === ks;\n        };\n    })(),\n\n    isNumber: (function(){\n        var ks = _rt(1);\n        return function(object){\n            return Object.prototype.toString.call(object) === ks;\n        };\n    })(),\n\n    /**\n     * 是否为函数\n     *\n     * @name isFunction\n     * @memberof JC\n     * @property {JC.isFunction}\n     */\n    isFunction: (function(){\n        var ks = _rt(function(){});\n        return function(object){\n            return Object.prototype.toString.call(object) === ks;\n        };\n    })(),\n\n    /**\n     * 强化的随机数\n     *\n     * @name random\n     * @memberof JC\n     * @property {JC.random}\n     */\n    random: function(min, max){\n        if (this.isArray(min))\n            return min[~~(Math.random() * min.length)];\n        if (!this.isNumber(max))\n            max = min || 1, min = 0;\n        return min + Math.random() * (max - min);\n    },\n\n    /**\n     * 阿基米德求模\n     *\n     * @name euclideanModulo\n     * @memberof JC\n     * @property {JC.euclideanModulo}\n     */\n    euclideanModulo: function(n, m){\n        return ((n % m) + m) % m;\n    },\n    \n    clamp: function(x, a, b) {\n        return (x < a) ? a : ((x > b) ? b : x);\n    },\n\n    TextureCache: {},\n\n    BaseTextureCache: {}\n\n};\n\n\n","\n/**\n * jcw2d的事件消息对象的类\n *\n * @class JC.InteractionData\n * @constructor\n */\nfunction InteractionData(){\n    /**\n     * 转换到canvas坐标系统的事件触发点\n     *\n     * @property global\n     * @type Object\n     */\n    this.global = {x:-100000,y:-100000};\n\n    /**\n     * 事件源\n     *\n     * @property target\n     * @type JC.Container\n     */\n    this.target = null;\n\n    /**\n     * 浏览器的原始事件对象\n     *\n     * @property originalEvent\n     * @type Event\n     */\n    this.originalEvent = null;\n\n    /**\n     * 在canvas内阻止事件冒泡\n     *\n     * @property cancleBubble\n     * @type Boolean\n     */\n    this.cancleBubble = false;\n\n    /**\n     * canvas视窗和页面坐标的兑换比例\n     *\n     * @property ratio\n     * @type Number\n     */\n    this.ratio = 1;\n\n    /**\n     * 事件类型\n     *\n     * @property type\n     * @type String\n     */\n    this.type = '';\n}\nJC.InteractionData = InteractionData;\n\n\n\n/**\n * jcw2d的事件对象的类\n *\n * @class JC.Eventer\n * @constructor Eventer\n * @memberof JC\n */\nfunction Eventer(){\n    this.touchstarted = false;\n    this.mouseDowned = false;\n    this.listeners = {};\n}\n/**\n * 事件对象的事件绑定函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 回调函数\n * @private\n */\nEventer.prototype.on = function(type,fn){\n    this.listeners[type] = this.listeners[type]||[];\n    this.listeners[type].push(fn);\n};\n/**\n * 事件对象的事件解绑函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 注册时回调函数的引用\n * @private\n */\nEventer.prototype.off = function(type,fn){\n    if (this.listeners[type]) {\n        var i = this.listeners[type].length;\n        if(fn){\n            while (i--) {\n                if (cbs[type][i] === fn) {\n                    cbs[type].splice(i, 1);\n                }\n            }\n        }else{\n            cbs[type].length = 0;\n        }\n    }\n};\n/**\n * 事件对象的触发事件函数\n *\n * @param ev {JC.InteractionData} 事件类型\n * @private\n */\nEventer.prototype.emit = function(ev){\n    if ( this.listeners === undefined ) return;\n    var ears = this.listeners;\n    var cbs = ears[ ev.type ];\n    if ( cbs !== undefined ) {\n        var length = cbs.length;\n        var i;\n        for ( i = 0; i < length; i ++ ) {\n            cbs[ i ].call( this, ev );\n        }\n    }\n};\nJC.Eventer = Eventer;","\n/**\n * 动画对象的基本类型\n *\n * @class\n * @memberof JC\n * @param [opts] {object} 动画配置信息\n */\n\nfunction Animate(opts){\n    this.element = opts.element||{};\n    this.duration = opts.duration||300;\n    this.living = true;\n\n    this.onCompelete = opts.onCompelete||null;\n    this.onUpdate = opts.onUpdate||null;\n\n    this.infinity = opts.infinity||false;\n    this.alternate = opts.alternate||false;\n    this.ease = opts.ease||'easeBoth';\n    this.repeats = opts.repeats||0;\n    this.delay = opts.delay||0;\n    this.progress = 0-this.delay;\n\n    this.timeScale = opts.timeScale||1;\n\n    this.paused = false;\n}\nJC.Animate = Animate;\nAnimate.prototype.nextPose = function(){\n    var cache = {};\n    for(var i in this.ATRE){\n        cache[i] = JC.TWEEN[this.ease]( this.progress , this.ATRS[i] , this.ATRE[i] - this.ATRS[i] , this.duration );\n        if(this.element[i]!==undefined)this.element[i] = cache[i];\n    }\n    return cache;//this.onUpdate\n};\nAnimate.prototype.pause = function(){\n    this.paused = true;\n};\nAnimate.prototype.start = function(){\n    this.paused = false;\n};\nAnimate.prototype.stop = function(){\n    this.progress = this.duration;\n};\nAnimate.prototype.cancle = function(){\n    this.living = false;\n};\n\n\n/**\n * Transition类型动画对象\n *\n * @class\n * @memberof JC\n * @param [opts] {object} 动画所具备的特性\n */\n\nfunction Transition(opts){\n    JC.Animate.call(this,opts);\n\n    this.ATRS = opts.from;\n    this.ATRE = opts.to;\n}\nJC.Transition = Transition;\nTransition.prototype = Object.create( JC.Animate.prototype );\nTransition.prototype.constructor = JC.Transition;\nTransition.prototype.update = function(snippet){\n    if(this.paused||!this.living)return;\n    this.progress += this.timeScale*snippet;\n\n    if(this.progress < this.duration){\n        if(this.progress<0)return;\n        var pose = this.nextPose();\n        this.onUpdate&&this.onUpdate(pose,this.progress/this.duration);\n    }else{\n        this.element.setVal(this.ATRE);\n        this.onUpdate&&this.onUpdate(this.ATRE,1);\n        if(this.repeats>0||this.infinity){\n            this.repeats>0&&--this.repeats;\n            this.progress = 0;\n            if(this.alternate){\n                var sc = JC.copyJSON(this.ATRS);\n                this.ATRS = JC.copyJSON(this.ATRE);\n                this.ATRE = sc;\n            }else{\n                this.element.setVal(this.ATRS);\n            }\n        }else{\n            this.living = false;\n            this.onCompelete&&this.onCompelete();\n        }\n    }\n};\n\n\n/**\n * Animation类型动画对象\n *\n * @class\n * @memberof JC\n * @param [opts] {object} 动画配置信息\n */\nfunction Animation(opts){\n    JC.Animate.call(this,opts);\n\n    this._keyframes = opts.keys;\n    this._keyIndex = 0;\n    this._direction = 1;\n    this._keyConfig = opts.keyConfig;\n\n    this.configKey();\n}\nJC.Animation = Animation;\nAnimation.prototype = Object.create( JC.Animate.prototype );\nAnimation.prototype.constructor = JC.Animation;\nAnimation.prototype.configKey = function(){\n    this.ATRS = this._keyframes[this._keyIndex];\n    this._keyIndex += this._direction;\n    this.ATRE = this._keyframes[this._keyIndex];\n    var config = this._keyConfig[Math.min(this._keyIndex,this._keyIndex-this._direction)]||{};\n    this.ease = config.ease||this.ease;\n    this.duration = config.duration||this.duration;\n    this.progress = 0;\n};\nAnimation.prototype.update = function(snippet){\n    if(this.paused||!this.living)return;\n    this.progress += this.timeScale*snippet;\n\n    if(this.progress < this.duration){\n        if(this.progress<0)return;\n        var pose = this.nextPose();\n        this.onUpdate&&this.onUpdate(pose,this.progress/this.duration,this._keyIndex);\n    }else{\n        this.element.setVal(this.ATRE);\n        this.onUpdate&&this.onUpdate(this.ATRE,1,this._keyIndex);\n        if(this._keyIndex<this._keyframes.length-1&&this._keyIndex>0){\n            this.configKey();\n        }else{\n            if(this.repeats>0||this.infinity){\n                this.repeats>0&&--this.repeats;\n                if(this.alternate){\n                    this._direction *= -1;\n                }else{\n                    this._keyIndex = 0;\n                }\n                this.configKey();\n            }else{\n                this.living = false;\n                this.onCompelete&&this.onCompelete();\n            }\n        }\n    }\n};\n\n\n/**\n * MovieClip类型动画对象\n *\n * @class\n * @memberof JC\n * @param [element] {object} 动画对象 内部传入\n * @param [opts] {object} 动画配置信息 内部传入\n */\nfunction MovieClip(element, opts){\n    this.element = element;\n    this.living = false;\n\n    this.onCompelete = null;\n    // this.onUpdate = null;\n\n    this.infinity = false;\n    this.alternate = false;\n    this.repeats = 0;\n\n    this.animations = opts.animations||{};\n\n    this.index = 0;\n    this.direction = 1;\n    this.frames = [];\n    this.sy = opts.sy||0;\n    this.sx = opts.sx||0;\n    this.fillMode = 0;\n    this.fps = 16;\n\n    this.paused = false;\n\n    this.pt = 0;\n    this.nt = 0;\n}\nJC.MovieClip = MovieClip;\nMovieClip.prototype.update = function(snippet){\n    if(this.paused||!this.living)return;\n    this.nt += snippet;\n    if(this.nt-this.pt<this.interval)return;\n    this.pt = this.nt;\n    var i = this.index + this.direction;\n    if(i<this.frames.length&&i>=0){\n        this.index = i;\n        // Do you need this handler???\n        // this.onUpdate&&this.onUpdate(this.index);\n    }else{\n        if(this.repeats>0||this.infinity){\n            this.repeats>0&&--this.repeats;\n            if(this.alternate){\n                this.direction *= -1;\n                this.index += this.direction;\n            }else{\n                this.direction = 1;\n                this.index = 0;\n            }\n            // Do you need this handler???\n            // this.onUpdate&&this.onUpdate(this.index);\n        }else{\n            this.living = false;\n            this.index = this.fillMode;\n            this.onCompelete&&this.onCompelete();\n            this.next&&this.next();\n        }\n    }\n};\nMovieClip.prototype.getFramePos = function(){\n    var pos = {\n            x: this.sx,\n            y: this.sy\n        };\n    var cf = this.frames[this.index];\n    if(cf>0){\n        var row = this.element._textureW/this.element.width >> 0;\n        var lintRow = this.sx/this.element.width >> 0;\n        var lintCol = this.sy/this.element.height >> 0;\n        var mCol = lintCol+(lintRow+cf)/row >> 0;\n        var mRow = (lintRow+cf)%row;\n        pos.x = mRow*this.element.width;\n        pos.y = mCol*this.element.height;\n    }\n    return pos;\n};\nMovieClip.prototype.playMovie = function(opts){\n    this.next = null;\n    var movie = this.format(opts.movie);\n    if(!JC.isArray(movie))return;\n    this.frames = movie;\n    this.index = 0;\n    this.direction = 1;\n    this.fillMode = opts.fillMode||0;\n    this.fps = opts.fps||this.fps;\n    this.infinity = opts.infinity||false;\n    this.alternate = opts.alternate||false;\n    this.repeats = opts.repeats||0;\n    this.living = true;\n    this.onCompelete = opts.onCompelete||null;\n};\nMovieClip.prototype.format = function(movie){\n    if(JC.isString(movie)){\n        var config = this.animations[movie];\n        if(config){\n            return this.format(config);\n        }else{\n            console.warn(\n            '%c JC.MovieClip warn %c: you didn\\`t config %c'+movie+'%c in animations ',\n            'color: #f98165; background: #80a89e',\n            'color: #80a89e; background: #cad9d5;',\n            'color: #f98165; background: #cad9d5',\n            'color: #80a89e; background: #cad9d5'\n            );\n            return false;\n        }\n    }else if(JC.isArray(movie)){\n        return movie;\n    }else if(JC.isObject(movie)){\n        var arr = [];\n        for(var i=movie.start;i<=movie.end;i++){\n            arr.push(i);\n        }\n        if(movie.next&&this.animations[movie.next]){\n            var This = this;\n            this.next = function(){\n                This.playMovie({\n                    movie: this.animations[movie.next],\n                    infinity: true\n                });\n            };\n        }\n        return arr;\n    }\n};\nMovieClip.prototype.pause = function(){\n    this.paused = true;\n};\nMovieClip.prototype.start = function(){\n    this.paused = false;\n};\nMovieClip.prototype.cancle = function(){\n    this.living = false;\n};\nObject.defineProperty(MovieClip.prototype, 'interval', {\n    get: function() {\n        return this.fps>0?1000/this.fps>>0:16;\n    }\n});\n\n\n/**\n * Transition类型动画对象\n *\n * @class\n * @memberof JC\n * @param [opts] {object} 动画所具备的特性\n * @param [opts] {object} 动画配置信息\n */\n\nfunction PathMotion(opts){\n    JC.Animate.call(this,opts);\n\n    this.points = opts.points;\n    this.attachNormal = opts.attachNormal||false;\n    this.sDeg = false;\n    this.tDeg = 0;\n    this.pDeg = 0;\n}\nJC.PathMotion = PathMotion;\nPathMotion.prototype = Object.create( JC.Animate.prototype );\nPathMotion.prototype.constructor = JC.PathMotion;\nPathMotion.prototype.update = function(snippet){\n    if(this.paused||!this.living)return;\n    this.progress += this.timeScale*snippet;\n\n    if(this.progress < this.duration){\n        if(this.progress<0)return;\n        var pose = this.nextPose();\n        this.onUpdate&&this.onUpdate(pose,this.progress/this.duration);\n    }else{\n        this.element.setVal(this.ATRE);\n        this.onUpdate&&this.onUpdate(this.ATRE,1);\n        if(this.repeats>0||this.infinity){\n            this.repeats>0&&--this.repeats;\n            this.progress = 0;\n            if(this.alternate){\n                var sc = JC.copyJSON(this.ATRS);\n                this.ATRS = JC.copyJSON(this.ATRE);\n                this.ATRE = sc;\n            }else{\n                this.element.setVal(this.ATRS);\n            }\n        }else{\n            this.living = false;\n            this.onCompelete&&this.onCompelete();\n        }\n    }\n};\nPathMotion.prototype.nextPose = function(){\n    var cache = {};\n    // for(var i in this.ATRE){\n    //     cache[i] = JC.TWEEN[this.ease]( this.progress , this.ATRS[i] , this.ATRE[i] - this.ATRS[i] , this.duration );\n    //     if(this.element[i]!==undefined)this.element[i] = cache[i];\n    // }\n    var t = JC.TWEEN[this.ease]( this.progress , 0 , 1 , this.duration );\n    var pos = this.getPoint(t,this.points);\n    cache.x = pos.x;\n    cache.y = pos.y;\n    // cache.y = pos.y;\n    if(this.attachNormal){\n        cache.rotate = this.decomposeRotate(t);\n    }\n    return cache;//this.onUpdate\n};\nPathMotion.prototype.getPoint = function(t, points) {\n    var a = points,\n        len = a.length,\n        rT = 1 - t,\n        l = a.slice(0, len - 1),\n        r = a.slice(1),\n        oP = {};\n    if (len > 3) {\n        var oL = this.getPoint(t, l),\n            oR = this.getPoint(t, r);\n        oP.x = rT * oL.x + t * oR.x;\n        oP.y = rT * oL.y + t * oR.y;\n        // oP.z = rT * oL.z + t * oR.z;\n        return oP;\n    } else {\n        oP.x = rT * rT * points[0].x + 2 * t * rT * points[1].x + t * t * points[2].x;\n        oP.y = rT * rT * points[0].y + 2 * t * rT * points[1].y + t * t * points[2].y;\n        // oP.z = rT * rT * points[0].z + 2 * t * rT * points[1].z + t * t * points[2].z;\n        return oP;\n    }\n};\nPathMotion.prototype.decomposeRotate = function(t) {\n    var p1 = this.getPoint(t,this.points);\n    var p2 = this.getPoint(t+0.01,this.points);\n    var deg = p1.xxxxx+p2.x;\n};\n\n/**\n * Animator类型动画对象\n *\n * @class\n * @memberof JC\n */\nfunction Animator(){\n    this.start = false;\n    this.animates = [];\n}\nJC.Animator = Animator;\nAnimator.prototype.update = function(snippet){\n    for(var i=0;i<this.animates.length;i++){\n        if(!this.animates[i].living)this.animates.splice(i,1);\n        this.animates[i]&&this.animates[i].update(snippet);\n    }\n};\nAnimator.prototype.fromTo = function(opts){\n    var animate = new JC.Transition(opts);\n    this.animates.push(animate);\n    return animate;\n};\nAnimator.prototype.keyFrames = function(opts){\n    var animate = new JC.Animation(opts);\n    this.animates.push(animate);\n    return animate;\n};\n\n\n\n\n\n\n\n","/**\n * The Point object represents a location in a two-dimensional coordinate system, where x represents\n * the horizontal axis and y represents the vertical axis.\n *\n * @class\n * @memberof PIXI\n * @param [x=0] {number} position of the point on the x axis\n * @param [y=0] {number} position of the point on the y axis\n */\nfunction Point(x, y)\n{\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.x = x || 0;\n\n    /**\n     * @member {number}\n     * @default 0\n     */\n    this.y = y || 0;\n}\n\nJC.Point = Point;\nPoint.prototype.constructor = JC.Point;\n\n/**\n * Creates a clone of this point\n *\n * @return {PIXI.Point} a copy of the point\n */\nPoint.prototype.clone = function ()\n{\n    return new Point(this.x, this.y);\n};\n\n/**\n * Copies x and y from the given point\n *\n * @param p {PIXI.Point}\n */\nPoint.prototype.copy = function (p) {\n    this.set(p.x, p.y);\n};\n\n/**\n * Returns true if the given point is equal to this point\n *\n * @param p {PIXI.Point}\n * @returns {boolean}\n */\nPoint.prototype.equals = function (p) {\n    return (p.x === this.x) && (p.y === this.y);\n};\n\n/**\n * Sets the point to a new x and y position.\n * If y is omitted, both x and y will be set to x.\n *\n * @param [x=0] {number} position of the point on the x axis\n * @param [y=0] {number} position of the point on the y axis\n */\nPoint.prototype.set = function (x, y)\n{\n    this.x = x || 0;\n    this.y = y || ( (y !== 0) ? this.x : 0 ) ;\n};\n","\n/**\n * 矩阵对象，用来描述和记录对象的tansform 状态信息\n *\n * @class\n * @memberof JC\n */\nfunction Matrix(){\n    this.a = 1;\n    this.b = 0;\n    this.c = 0;\n    this.d = 1;\n    this.tx = 0;\n    this.ty = 0;\n}\nJC.Matrix = Matrix;\nMatrix.prototype.constructor = JC.Matrix;\n\n/**\n * 从数组设置一个矩阵\n *\n * @param array {number[]}\n */\nMatrix.prototype.fromArray = function(array){\n    this.a = array[0];\n    this.b = array[1];\n    this.c = array[3];\n    this.d = array[4];\n    this.tx = array[2];\n    this.ty = array[5];\n};\n\n/**\n * 将对象的数据以数组的形式导出\n *\n * @param transpose {boolean} 是否对矩阵进行转置\n * @return {number[]} 返回数组\n */\nMatrix.prototype.toArray = function(transpose){\n    if(!this.array) this.array = new JC.Float32Array(9);\n    var array = this.array;\n\n    if(transpose){\n        array[0] = this.a;\n        array[1] = this.b;\n        array[2] = 0;\n        array[3] = this.c;\n        array[4] = this.d;\n        array[5] = 0;\n        array[6] = this.tx;\n        array[7] = this.ty;\n        array[8] = 1;\n    }else{\n        array[0] = this.a;\n        array[1] = this.c;\n        array[2] = this.tx;\n        array[3] = this.b;\n        array[4] = this.d;\n        array[5] = this.ty;\n        array[6] = 0;\n        array[7] = 0;\n        array[8] = 1;\n    }\n    return array;\n};\n\n/**\n * 将坐标点与矩阵左乘\n *\n * @param pos {object} 原始点\n * @param newPos {object} 变换之后的点\n * @return {object} 返回数组\n */\nMatrix.prototype.apply = function(pos, newPos){\n    newPos = newPos || {};\n    newPos.x = this.a * pos.x + this.c * pos.y + this.tx;\n    newPos.y = this.b * pos.x + this.d * pos.y + this.ty;\n    return newPos;\n};\n/**\n * 将坐标点与转置矩阵左乘\n *\n * @param pos {object} 原始点\n * @param newPos {object} 变换之后的点\n * @return {object} 变换之后的点\n */\nMatrix.prototype.applyInverse = function(pos, newPos){\n    var id = 1 / (this.a * this.d + this.c * -this.b);\n    newPos.x = this.d * id * pos.x + -this.c * id * pos.y + (this.ty * this.c - this.tx * this.d) * id;\n    newPos.y = this.a * id * pos.y + -this.b * id * pos.x + (-this.ty * this.a + this.tx * this.b) * id;\n    return newPos;\n};\n/**\n * 位移操作\n *\n * @return {this} \n */\nMatrix.prototype.translate = function(x, y){\n    this.tx += x;\n    this.ty += y;\n    return this;\n};\n/**\n * 缩放操作\n *\n * @return {this} \n */\nMatrix.prototype.scale = function(x, y){\n    this.a *= x;\n    this.d *= y;\n    this.c *= x;\n    this.b *= y;\n    this.tx *= x;\n    this.ty *= y;\n    return this;\n};\n/**\n * 旋转操作\n *\n * @return {this} \n */\nMatrix.prototype.rotate = function(angle){\n    var cos = Math.cos( angle );\n    var sin = Math.sin( angle );\n    var a1 = this.a;\n    var c1 = this.c;\n    var tx1 = this.tx;\n    this.a = a1 * cos-this.b * sin;\n    this.b = a1 * sin+this.b * cos;\n    this.c = c1 * cos-this.d * sin;\n    this.d = c1 * sin+this.d * cos;\n    this.tx = tx1 * cos - this.ty * sin;\n    this.ty = tx1 * sin + this.ty * cos;\n    return this;\n};\n/**\n * 矩阵相乘\n *\n * @return {this} \n */\nMatrix.prototype.append = function(matrix){\n    var a1 = this.a;\n    var b1 = this.b;\n    var c1 = this.c;\n    var d1 = this.d;\n    this.a  = matrix.a * a1 + matrix.b * c1;\n    this.b  = matrix.a * b1 + matrix.b * d1;\n    this.c  = matrix.c * a1 + matrix.d * c1;\n    this.d  = matrix.c * b1 + matrix.d * d1;\n    this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n    this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n    return this;\n};\n/**\n * 单位矩阵\n *\n * @return {this} \n */\nMatrix.prototype.identity = function(){\n    this.a = 1;\n    this.b = 0;\n    this.c = 0;\n    this.d = 1;\n    this.tx = 0;\n    this.ty = 0;\n    return this;\n};\n/**\n * 快速设置矩阵各个分量\n *\n * @return {this} \n */\nMatrix.prototype.setTransform = function (x, y, pivotX, pivotY, scaleX, scaleY, rotation, skewX, skewY)\n{\n    var a, b, c, d, sr, cr, cy, sy, nsx, cx;\n\n    sr  = Math.sin(rotation);\n    cr  = Math.cos(rotation);\n    cy  = Math.cos(skewY);\n    sy  = Math.sin(skewY);\n    nsx = -Math.sin(skewX);\n    cx  =  Math.cos(skewX);\n\n    a  =  cr * scaleX;\n    b  =  sr * scaleX;\n    c  = -sr * scaleY;\n    d  =  cr * scaleY;\n\n    this.a  = cy * a + sy * c;\n    this.b  = cy * b + sy * d;\n    this.c  = nsx * a + cx * c;\n    this.d  = nsx * b + cx * d;\n\n    this.tx = x + ( pivotX * a + pivotY * c );\n    this.ty = y + ( pivotX * b + pivotY * d );\n\n    return this;\n};\nJC.IDENTITY = new Matrix();\nJC.TEMP_MATRIX = new Matrix();\n","JC.BaseTextureCache = {};\nfunction BaseTexture(source, scaleMode) {\n    JC.Eventer.call(this);\n\n    this.width = 100;\n\n    this.height = 100;\n\n    this.realWidth = 100;\n\n    this.realHeight = 100;\n\n    this.scaleMode = scaleMode || CONST.SCALE_MODES.DEFAULT;\n\n    this.hasLoaded = false;\n\n    this.isLoading = false;\n\n    this.source = null; // set in loadSource, if at all\n\n    this.resolution = 1;\n\n    this.premultipliedAlpha = true;\n\n    this.imageUrl = null;\n\n    this.isPowerOfTwo = false;\n\n    this.mipmap = false;\n\n    // this._glTextures = {};\n\n    // if no source passed don't try to load\n    if (source) {\n        this.loadSource(source);\n    }\n\n}\n\nBaseTexture.prototype = Object.create(JC.Eventer.prototype);\nBaseTexture.prototype.constructor = BaseTexture;\n\nBaseTexture.prototype.update = function() {\n    this.realWidth = this.source.naturalWidth || this.source.width;\n    this.realHeight = this.source.naturalHeight || this.source.height;\n\n    this.width = this.realWidth / this.resolution;\n    this.height = this.realHeight / this.resolution;\n\n    this.isPowerOfTwo = utils.isPowerOfTwo(this.realWidth, this.realHeight);\n\n    this.emit({ type: 'update' });\n};\n\nBaseTexture.prototype.loadSource = function(source) {\n    var wasLoading = this.isLoading;\n    this.hasLoaded = false;\n    this.isLoading = false;\n\n    this.source = source;\n\n    if ((this.source.complete || this.source.getContext) && this.source.width && this.source.height) {\n        this._sourceLoaded();\n    } else if (!source.getContext) {\n        this.isLoading = true;\n\n        var This = this;\n\n        source.onload = function() {\n            source.onload = null;\n            source.onerror = null;\n\n            This.isLoading = false;\n            This._sourceLoaded();\n            This.emit({ type: 'loaded' });\n        };\n\n        source.onerror = function() {\n            source.onload = null;\n            source.onerror = null;\n\n            This.isLoading = false;\n            This.emit({ type: 'error' });\n        };\n\n        if (source.complete && source.src) {\n            this.isLoading = false;\n\n            source.onload = null;\n            source.onerror = null;\n\n            if (source.width && source.height) {\n                this._sourceLoaded();\n\n                // If any previous subscribers possible\n                if (wasLoading) {\n                    this.emit({ type: 'loaded' });\n                }\n            } else {\n                // If any previous subscribers possible\n                if (wasLoading) {\n                    this.emit({ type: 'error' });\n                }\n            }\n        }\n    }\n};\n\nBaseTexture.prototype._sourceLoaded = function() {\n    this.hasLoaded = true;\n    this.update();\n};\nBaseTexture.fromImage = function (imageUrl, crossorigin, scaleMode)\n{\n    var baseTexture = JC.BaseTextureCache[imageUrl];\n\n    if (crossorigin === undefined && imageUrl.indexOf('data:') !== 0)\n    {\n        crossorigin = true;\n    }\n\n    if (!baseTexture)\n    {\n        var image = new Image();\n        if (crossorigin)\n        {\n            image.crossOrigin = '';\n        }\n\n        baseTexture = new BaseTexture(image, scaleMode);\n        baseTexture.imageUrl = imageUrl;\n\n        image.src = imageUrl;\n\n        JC.BaseTextureCache[imageUrl] = baseTexture;\n\n    }\n\n    return baseTexture;\n};\n","function Texture(baseTexture, frame) {\n    JC.Eventer.call(this);\n\n    this.noFrame = false;\n\n    if (!frame) {\n        this.noFrame = true;\n        frame = new math.Rectangle(0, 0, 1, 1);\n    }\n\n    if (baseTexture instanceof Texture) {\n        baseTexture = baseTexture.baseTexture;\n    }\n\n    this.baseTexture = baseTexture;\n\n    this._frame = frame;\n\n    this.valid = false;\n\n    this.requiresUpdate = false;\n\n    this._uvs = null;\n\n    this.width = 0;\n\n    this.height = 0;\n\n    if (baseTexture.hasLoaded) {\n        if (this.noFrame) {\n            frame = new math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n\n            // if there is no frame we should monitor for any base texture changes..\n            baseTexture.on('update', this.onBaseTextureUpdated, this);\n        }\n        this.frame = frame;\n    } else {\n        baseTexture.once('loaded', this.onBaseTextureLoaded, this);\n    }\n\n}\n\nTexture.prototype = Object.create(JC.Eventer.prototype);\nTexture.prototype.constructor = Texture;\n\nObject.defineProperties(Texture.prototype, {\n    frame: {\n        get: function() {\n            return this._frame;\n        },\n        set: function(frame) {\n            this._frame = frame;\n\n            this.noFrame = false;\n\n            this.width = frame.width;\n            this.height = frame.height;\n\n            this.valid = frame && frame.width && frame.height && this.baseTexture.hasLoaded;\n\n            if (this.valid) {\n                this._updateUvs();\n            }\n        }\n    }\n});\n\nTexture.prototype.update = function() {\n    this.baseTexture.update();\n};\n\nTexture.prototype.onBaseTextureLoaded = function(baseTexture) {\n    // TODO this code looks confusing.. boo to abusing getters and setterss!\n    if (this.noFrame) {\n        this.frame = new math.Rectangle(0, 0, baseTexture.width, baseTexture.height);\n    } else {\n        this.frame = this._frame;\n    }\n\n    this.emit('update', this);\n};\n\nTexture.prototype.onBaseTextureUpdated = function(baseTexture) {\n    this._frame.width = baseTexture.width;\n    this._frame.height = baseTexture.height;\n\n    this.emit('update', this);\n};\n\nTexture.prototype._updateUvs = function() {\n    if (!this._uvs) {\n        this._uvs = new TextureUvs();\n    }\n    this._uvs.set(this.frame, this.baseTexture);\n};\n\nTexture.fromImage = function(imageUrl, crossorigin, scaleMode) {\n    var texture = JC.UTILS.TextureCache[imageUrl];\n\n    if (!texture) {\n        texture = new Texture(BaseTexture.fromImage(imageUrl, crossorigin, scaleMode));\n        JC.UTILS.TextureCache[imageUrl] = texture;\n    }\n\n    return texture;\n};\n\nTexture.fromCanvas = function(canvas, scaleMode) {\n    return new Texture(BaseTexture.fromCanvas(canvas, scaleMode));\n};\n\n","function TextureUvs() {\n    this.x0 = 0;\n    this.y0 = 0;\n\n    this.x1 = 1;\n    this.y1 = 0;\n\n    this.x2 = 1;\n    this.y2 = 1;\n\n    this.x3 = 0;\n    this.y3 = 1;\n}\n\nTextureUvs.prototype.set = function(frame, baseFrame) {\n    var tw = baseFrame.width;\n    var th = baseFrame.height;\n\n        this.x0 = frame.x / tw;\n        this.y0 = frame.y / th;\n\n        this.x1 = (frame.x + frame.width) / tw;\n        this.y1 = frame.y / th;\n\n        this.x2 = (frame.x + frame.width) / tw;\n        this.y2 = (frame.y + frame.height) / th;\n\n        this.x3 = frame.x / tw;\n        this.y3 = (frame.y + frame.height) / th;\n};\n","\n/**\n * 显示对象的基类\n *\n * @class\n * @memberof JC\n */\nfunction DisplayObject(){\n    this._ready = true;\n\n    this.visible = true;\n    this.worldAlpha = 1;\n    this.alpha = 1;\n\n    this.scaleX = 1;\n    this.scaleY = 1;\n\n    this.skewX = 0;\n    this.skewY = 0;\n\n    this.rotation = 0;\n    this.rotationCache = 0;\n    this._sr = 0;\n    this._cr = 1;\n    \n    this.x = 0;\n    this.y = 0;\n    \n    this.pivotX = 0;\n    this.pivotY = 0;\n\n    this.mask = null;\n\n    this.parent = null;\n    this.worldTransform = new JC.Matrix();\n\n    this.event = new JC.Eventer();\n    this.passEvent = false;\n    this.bound = [];\n\n\n    this.Animator = new JC.Animator();\n}\nJC.DisplayObject = DisplayObject;\nDisplayObject.prototype.constructor = JC.DisplayObject;\n\nObject.defineProperty(DisplayObject.prototype, 'scale', {\n    get: function() {\n        return this.scaleX;\n    },\n    set: function(scale) {\n        this.scaleX = this.scaleY = scale;\n    }\n});\n\n/**\n * fromTo动画，指定动画的启始位置和结束位置\n *\n * ```js\n * // 扩展缓动函数，缓动函数库详见目录下的util/tween.js\n * JC.TWEEN.extend({    \n *    bounceOut: function(t, b, c, d){\n *        if ((t/=d) < (1/2.75)) {\n *            return c*(7.5625*t*t) + b;\n *        } else if (t < (2/2.75)) {\n *            return c*(7.5625*(t-=(1.5/2.75))*t + 0.75) + b;\n *        } else if (t < (2.5/2.75)) {\n *            return c*(7.5625*(t-=(2.25/2.75))*t + 0.9375) + b;\n *        }\n *        return c*(7.5625*(t-=(2.625/2.75))*t + 0.984375) + b;\n *    }\n * });\n * var dispayObj = new JC.Text('Hello JC','bold 36px Arial','#c32361');\n * dispayObj.fromTo({\n *   from: {x: 100},\n *   to: {x: 200},\n *   ease: 'bounceOut', // 执行动画使用的缓动函数 默认值为 easeBoth\n *   repeats: 10, // 动画运动完后再重复10次\n *   infinity: true, // 无限循环动画\n *   alternate: true, // 偶数次的时候动画回放\n *   duration: 1000, // 动画时长 ms单位 默认 300ms\n *   onUpdate: function(state,rate){},\n *   onCompelete: function(){ console.log('end'); } // 动画执行结束回调\n * });\n * ```\n *\n * @param opts {object} 配置\n * @param clear {boolean} 是否去掉之前的动画\n */\nDisplayObject.prototype.fromTo = function(opts,clear){\n    opts.element = this;\n    this.setVal(opts.from);\n    if(clear)this.Animator.animates.length = 0;\n    return this.Animator.fromTo(opts);\n};\n\n/**\n * to动画，物体当前位置为动画的启始位置，只需制定动画的结束位置\n *\n * @param opts {object} 配置\n * @param clear {boolean} 是否去掉之前的动画\n */\nDisplayObject.prototype.to = function(opts,clear){\n    opts.element = this;\n    opts.from = {};\n    for(var i in opts.to){\n        opts.from[i] = this[i];\n    }\n    if(clear)this.Animator.animates.length = 0;\n    return this.Animator.fromTo(opts);\n};\n\n/**\n * keyFrames动画，设置物体动画的keyframe，可以为相邻的两个keyFrames之前配置差值时间及时间函数\n *\n * @param opts {object} 配置\n * @param clear {boolean} 是否去掉之前的动画\n */\nDisplayObject.prototype.keyFrames = function(opts,clear){\n    opts.element = this;\n    if(clear)this.Animator.animates.length = 0;\n    return this.Animator.keyFrames(opts);\n};\n\n/**\n * 检测是否可见\n *\n * @method isVisible\n * @private\n */\nDisplayObject.prototype.isVisible = function(){\n    return !!(this.visible && this.alpha>0 && this.scaleX*this.scaleY>0);\n};\n\nDisplayObject.prototype.setVal = function(vals){\n    if(vals===undefined)return;\n    for(var key in vals){\n        if(this[key]===undefined){\n            continue;\n        }else{\n            this[key] = vals[key];\n        }\n    }\n};\nDisplayObject.prototype.updateMe = function(){\n    var pt = this.parent.worldTransform;\n    var wt = this.worldTransform;\n\n    var a, b, c, d, tx, ty;\n\n    if(this.skewX || this.skewY){\n\n        JC.TEMP_MATRIX.setTransform(\n            this.x,\n            this.y,\n            this.pivotX,\n            this.pivotY,\n            this.scaleX,\n            this.scaleY,\n            this.rotation,\n            this.skewX,\n            this.skewY\n        );\n\n        wt.a  = JC.TEMP_MATRIX.a  * pt.a + JC.TEMP_MATRIX.b  * pt.c;\n        wt.b  = JC.TEMP_MATRIX.a  * pt.b + JC.TEMP_MATRIX.b  * pt.d;\n        wt.c  = JC.TEMP_MATRIX.c  * pt.a + JC.TEMP_MATRIX.d  * pt.c;\n        wt.d  = JC.TEMP_MATRIX.c  * pt.b + JC.TEMP_MATRIX.d  * pt.d;\n        wt.tx = JC.TEMP_MATRIX.tx * pt.a + JC.TEMP_MATRIX.ty * pt.c + pt.tx;\n        wt.ty = JC.TEMP_MATRIX.tx * pt.b + JC.TEMP_MATRIX.ty * pt.d + pt.ty;\n    }else{\n        if(this.rotation % 360){\n            if(this.rotation !== this.rotationCache){\n                this.rotationCache = this.rotation;\n                this._sr = Math.sin(this.rotation*JC.DTR);\n                this._cr = Math.cos(this.rotation*JC.DTR);\n            }\n\n            a  =  this._cr * this.scaleX;\n            b  =  this._sr * this.scaleX;\n            c  = -this._sr * this.scaleY;\n            d  =  this._cr * this.scaleY;\n            tx =  this.x;\n            ty =  this.y;\n\n            if(this.pivotX || this.pivotY){\n                tx -= this.pivotX * a + this.pivotY * c;\n                ty -= this.pivotX * b + this.pivotY * d;\n            }\n            wt.a  = a  * pt.a + b  * pt.c;\n            wt.b  = a  * pt.b + b  * pt.d;\n            wt.c  = c  * pt.a + d  * pt.c;\n            wt.d  = c  * pt.b + d  * pt.d;\n            wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n            wt.ty = tx * pt.b + ty * pt.d + pt.ty; \n        }else{\n            a  = this.scaleX;\n            d  = this.scaleY;\n\n            tx = this.x - this.pivotX * a;\n            ty = this.y - this.pivotY * d;\n\n            wt.a  = a  * pt.a;\n            wt.b  = a  * pt.b;\n            wt.c  = d  * pt.c;\n            wt.d  = d  * pt.d;\n            wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n            wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n        }\n    }\n    this.worldAlpha = this.alpha * this.parent.worldAlpha;\n};\n\nDisplayObject.prototype.upAnimation = function(snippet){\n    this.Animator.update(snippet);\n};\nDisplayObject.prototype.setTransform = function(ctx){\n    var matrix = this.worldTransform;\n    ctx.globalAlpha = this.worldAlpha;\n    ctx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);\n};\n/**\n * 获取物体相对于canvas世界坐标系的坐标位置\n *\n * @return {object}\n */\nDisplayObject.prototype.getGlobalPos = function(){\n    return {x: this.worldTransform.x,y: this.worldTransform.y};\n};\n/**\n * 显示对象的事件绑定函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 回调函数\n */\nDisplayObject.prototype.on = function(type,fn){\n    this.event.on(type,fn);\n};\n/**\n * 显示对象的事件解绑函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 注册时回调函数的引用\n */\nDisplayObject.prototype.off = function(type,fn){\n    this.event.off(type,fn);\n};\n/**\n * 显示对象的一次性事件绑定函数\n *\n * @param type {String} 事件类型\n * @param fn {Function} 回调函数\n */\nDisplayObject.prototype.once = function(type,fn){\n    var This = this,\n        cb = function(ev){\n            fn&&fn(ev);\n            This.event.off(type,cb);\n        };\n    this.event.on(type,cb);\n};\n/**\n * 获取当前坐标系下的监测区域\n *\n * @method getBound\n * @private\n */\nDisplayObject.prototype.getBound = function (){\n    var bound = [],\n        l = this.bound.length>>1;\n\n    for (var i = 0; i < l; i++) {\n        var p = this.worldTransform.apply({x: this.bound[i*2],y: this.bound[i*2+1]});\n        bound[i*2  ] = p.x;\n        bound[i*2+1] = p.y;\n    }\n    return bound;\n};\n/**\n * 设置显示对象的监测区域\n *\n * @param points {Array} 区域的坐标点 [x0,y0 ..... xn,yn]\n * @param needless {boolean} 当该值为true，当且仅当this.bound为空时才会更新点击区域。默认为false，总是更新点击区域。\n * @return {Array}\n */\nDisplayObject.prototype.setBound = function (points,needless){\n    var l = this.bound.length;\n    if(l>4&&needless)return;\n    points = points||[\n        -this.regX,this.regY,\n        -this.regX,this.regY-this.height,\n        -this.regX+this.width,this.regY-this.height,\n        -this.regX+this.width,this.regY\n    ];\n    this.bound = points;\n};\nDisplayObject.prototype.ContainsPoint = function (p,px,py){\n    var n = p.length>>1;\n    var ax, ay = p[2*n-3]-py, bx = p[2*n-2]-px, by = p[2*n-1]-py;\n    \n    //var lup = by > ay;\n    for(var i=0; i<n; i++){\n        ax = bx;  ay = by;\n        bx = p[2*i  ] - px;\n        by = p[2*i+1] - py;\n        if(ay==by) continue;\n        lup = by>ay;\n    }\n    \n    var depth = 0;\n    for(i=0; i<n; i++){\n        ax = bx;  ay = by;\n        bx = p[2*i  ] - px;\n        by = p[2*i+1] - py;\n        if(ay< 0 && by< 0) continue;\n        if(ay> 0 && by> 0) continue;\n        if(ax< 0 && bx< 0) continue;\n        \n        if(ay==by && Math.min(ax,bx)<=0) return true;\n        if(ay==by) continue;\n        \n        var lx = ax + (bx-ax)*(-ay)/(by-ay);\n        if(lx===0) return true;\n        if(lx> 0) depth++;\n        if(ay===0 &&  lup && by>ay) depth--;\n        if(ay===0 && !lup && by<ay) depth--;\n        lup = by>ay;\n    }\n    return (depth & 1) == 1;\n};\n","\n\n/**\n * 显示对象容器，继承至DisplayObject\n *\n * ```js\n * var container = new JC.Container();\n * container.addChilds(sprite);\n * ```\n *\n * @class\n * @extends JC.DisplayObject\n * @memberof JC\n */\nfunction Container(){\n    JC.DisplayObject.call( this );\n    this.cds = [];\n    this.timeScale = 1;\n    this.paused = false;\n}\nJC.Container = Container;\nContainer.prototype = Object.create( JC.DisplayObject.prototype );\nContainer.prototype.constructor = JC.Container;\n\n/**\n * 向容器添加一个物体\n * \n * ```js\n * container.addChilds(sprite,sprite2,text3,graphice);\n * ```\n *\n * @param child {JC.Container}\n * @return {JC.Container}\n */\nContainer.prototype.addChilds = function (cd){\n    if(cd === undefined)return cd;\n    var l = arguments.length;\n    if(l > 1){\n        for (var i=0; i<l; i++) { this.addChilds(arguments[i]); }\n        return arguments[l-1];\n    }\n    if(cd.parent){ cd.parent.removeChilds(cd); }\n    cd.parent = this;\n    this.cds.push(cd);\n    return cd;\n};\n/**\n * 从容器移除一个物体\n * \n * ```js\n * container.removeChilds(sprite,sprite2,text3,graphice);\n * ```\n *\n * @param child {JC.Container}\n * @return {JC.Container}\n */\nContainer.prototype.removeChilds = function (){\n    var l = arguments.length;\n    if(l > 1){\n        for (var i=0; i<l; i++) { this.removeChilds(arguments[i]); }\n    }else if(l===1){\n        for(var a=0;a<this.cds.length;a++){\n            if(this.cds[a]===arguments[0]){\n                this.cds.splice(a,1);\n                this.cds[a].parent = null;\n                a--;\n            }\n        }\n    }\n};\nContainer.prototype.updateTransform = function (snippet){\n    if(!this._ready)return;\n    snippet = this.timeScale*snippet;\n    !this.paused&&this.upAnimation(snippet);\n    this.updateMe();\n    this.cds.length>0&&this.updateChilds(snippet);\n};\nContainer.prototype.updateChilds = function (snippet){\n    for (var i=0,l=this.cds.length; i<l; i++) {\n        var cd = this.cds[i];\n        cd.updateTransform(snippet);\n    }\n};\nContainer.prototype.render = function (ctx){\n    ctx.save();\n    this.setTransform(ctx);\n    this.mask&&this.mask.render(ctx);\n    this.renderMe(ctx);\n    this.cds.length>0&&this.renderChilds(ctx);\n    ctx.restore();\n};\nContainer.prototype.renderMe = function (){\n    return true;\n};\nContainer.prototype.renderChilds = function (ctx){\n    for (var i=0,l=this.cds.length; i<l; i++) {\n        var cd = this.cds[i];\n        if (!cd.isVisible()||!cd._ready)continue;\n        cd.render(ctx);\n    }\n};\nContainer.prototype.noticeEvent = function (ev){\n    var i = this.cds.length-1;\n    while(i>=0){\n        var child = this.cds[i];\n        if(child.visible){\n            child.noticeEvent(ev);\n            if(ev.target)break;\n        }\n        i--;\n    }\n    this.upEvent(ev);\n};\nContainer.prototype.upEvent = function(ev){\n    if(!this._ready)return;\n    if(ev.target||(!this.passEvent&&this.hitTest(ev))){\n        if(!ev.cancleBubble||ev.target===this){\n            if(!(this.event.listeners[ev.type]&&this.event.listeners[ev.type].length>0))return;\n            this.event.emit(ev);\n        }\n    }\n};\nContainer.prototype.hitTest = function(ev){\n    if (ev.type==='touchmove'||ev.type==='touchend'||ev.type==='mousemove'||ev.type==='mouseup'){\n        var re = this.event.touchstarted;\n        if(re)ev.target = this;\n        if(ev.type==='touchend'||ev.type==='mouseup')this.event.touchstarted = false;\n        return re;\n    }\n    if(this.hitTestMe(ev)){\n        ev.target = this;\n        if(ev.type==='touchstart'||ev.type==='mousedown')this.event.touchstarted = true;\n        return true;\n    }\n    return false;\n};\nContainer.prototype.hitTestMe = function(ev){\n    return this.ContainsPoint(this.getBound(),ev.global.x,ev.global.y);\n};\nContainer.prototype.pause = function(){\n    this.paused = true;\n};\nContainer.prototype.start = function(){\n    this.paused = false;\n};\nContainer.prototype.cancle = function(){\n    this.Animator.animates.length = 0;\n};\n","function Sprite(texture) {\n    JC.Container.call(this);\n\n    /**\n     * The anchor sets the origin point of the texture.\n     * The default is 0,0 this means the texture's origin is the top left\n     * Setting the anchor to 0.5,0.5 means the texture's origin is centered\n     * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner\n     *\n     * @member {PIXI.Point}\n     */\n    this.anchor = new JC.Point();\n\n    /**\n     * The texture that the sprite is using\n     *\n     * @member {PIXI.Texture}\n     * @private\n     */\n    this._texture = null;\n\n    /**\n     * The width of the sprite (this is initially set by the texture)\n     *\n     * @member {number}\n     * @private\n     */\n    this._width = 0;\n\n    /**\n     * The height of the sprite (this is initially set by the texture)\n     *\n     * @member {number}\n     * @private\n     */\n    this._height = 0;\n\n    /**\n     * The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\n     *\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    this.tint = 0xFFFFFF;\n\n    /**\n     * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n     *\n     * @member {number}\n     * @default PIXI.BLEND_MODES.NORMAL\n     * @see PIXI.BLEND_MODES\n     */\n    this.blendMode = JC.CONST.BLEND_MODES.NORMAL;\n\n    /**\n     * The shader that will be used to render the sprite. Set to null to remove a current shader.\n     *\n     * @member {PIXI.AbstractFilter|PIXI.Shader}\n     */\n    this.shader = null;\n\n    /**\n     * An internal cached value of the tint.\n     *\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    this.cachedTint = 0xFFFFFF;\n\n    // call texture setter\n    this.texture = texture;\n}\n\n// constructor\nJC.Sprite = Sprite;\nSprite.prototype = Object.create(JC.Container.prototype);\nSprite.prototype.constructor = JC.Sprite;\n\nObject.defineProperties(Sprite.prototype, {\n    /**\n     * The width of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Sprite#\n     */\n    width: {\n        get: function() {\n            return Math.abs(this.scale.x) * this.texture._frame.width;\n        },\n        set: function(value) {\n            var sign = utils.sign(this.scale.x) || 1;\n            this.scale.x = sign * value / this.texture._frame.width;\n            this._width = value;\n        }\n    },\n\n    /**\n     * The height of the sprite, setting this will actually modify the scale to achieve the value set\n     *\n     * @member {number}\n     * @memberof PIXI.Sprite#\n     */\n    height: {\n        get: function() {\n            return Math.abs(this.scale.y) * this.texture._frame.height;\n        },\n        set: function(value) {\n            var sign = utils.sign(this.scale.y) || 1;\n            this.scale.y = sign * value / this.texture._frame.height;\n            this._height = value;\n        }\n    },\n\n    /**\n     * The texture that the sprite is using\n     *\n     * @member {PIXI.Texture}\n     * @memberof PIXI.Sprite#\n     */\n    texture: {\n        get: function() {\n            return this._texture;\n        },\n        set: function(value) {\n            if (this._texture === value) {\n                return;\n            }\n\n            this._texture = value;\n            this.cachedTint = 0xFFFFFF;\n\n            if (value) {\n                // wait for the texture to load\n                if (value.baseTexture.hasLoaded) {\n                    this._onTextureUpdate();\n                } else {\n                    value.once('update', this._onTextureUpdate, this);\n                }\n            }\n        }\n    }\n});\n\n/**\n * When the texture is updated, this event will fire to update the scale and frame\n *\n * @private\n */\nSprite.prototype.upTexture = function() {\n    this._textureW = opts.texture.width;\n    this._textureH = opts.texture.height;\n    this.width = opts.width || this._textureW;\n    this.height = opts.height || this._textureH;\n    this.regX = this.width >> 1;\n    this.regY = this.height >> 1;\n    this.setBound(null, true);\n};\n\n/**\n *\n * Renders the object using the WebGL renderer\n *\n * @param renderer {PIXI.WebGLRenderer}\n * @private\n */\nSprite.prototype.render = function(renderer) {\n    renderer.setObjectRenderer(renderer.plugins.sprite);\n    renderer.plugins.sprite.render(this);\n};\n\n/**\n * Returns the bounds of the Sprite as a rectangle. The bounds calculation takes the worldTransform into account.\n *\n * @param matrix {PIXI.Matrix} the transformation matrix of the sprite\n * @return {PIXI.Rectangle} the framing rectangle\n */\nSprite.prototype.getBounds = function(matrix) {\n\n};\n\n/**\n * Gets the local bounds of the sprite object.\n *\n */\nSprite.prototype.getLocalBounds = function() {};\n\n/**\n * Tests if a point is inside this sprite\n *\n * @param point {PIXI.Point} the point to test\n * @return {boolean} the result of the test\n */\nSprite.prototype.containsPoint = function(point) {};\n","function ParticleContainer(maxSize, properties, batchSize)\n{\n    JC.Container.call(this);\n\n    batchSize = batchSize || 15000; //CONST.SPRITE_BATCH_SIZE; // 2000 is a nice balance between mobile / desktop\n    maxSize = maxSize || 15000;\n\n    // Making sure the batch size is valid\n    // 65535 is max vertex index in the index buffer (see ParticleRenderer)\n    // so max number of particles is 65536 / 4 = 16384\n    var maxBatchSize = 16384;\n    if (batchSize > maxBatchSize) {\n        batchSize = maxBatchSize;\n    }\n\n    if (batchSize > maxSize) {\n        batchSize = maxSize;\n    }\n\n    /**\n     * Set properties to be dynamic (true) / static (false)\n     *\n     * @member {boolean[]}\n     * @private\n     */\n    this._properties = [false, true, false, false, false];\n\n    /**\n     * @member {number}\n     * @private\n     */\n    this._maxSize = maxSize;\n\n    /**\n     * @member {number}\n     * @private\n     */\n    this._batchSize = batchSize;\n\n    /**\n     * @member {WebGLBuffer}\n     * @private\n     */\n    this._buffers = null;\n\n    /**\n     * @member {number}\n     * @private\n     */\n    this._bufferToUpdate = 0;\n\n    /**\n     * @member {boolean}\n     *\n     */\n    this.interactiveChildren = false;\n\n    /**\n     * The blend mode to be applied to the sprite. Apply a value of `PIXI.BLEND_MODES.NORMAL` to reset the blend mode.\n     *\n     * @member {number}\n     * @default PIXI.BLEND_MODES.NORMAL\n     * @see PIXI.BLEND_MODES\n     */\n    this.blendMode = JC.CONST.BLEND_MODES.NORMAL;\n\n    this.setProperties(properties);\n}\n\nJC.ParticleContainer = ParticleContainer;\nParticleContainer.prototype = Object.create(JC.Container.prototype);\nParticleContainer.prototype.constructor = JC.ParticleContainer;\n\n/**\n * Sets the private properties array to dynamic / static based on the passed properties object\n *\n * @param properties {object} The properties to be uploaded\n */\nParticleContainer.prototype.setProperties = function(properties)\n{\n    if ( properties ) {\n        this._properties[0] = 'scale' in properties ? !!properties.scale : this._properties[0];\n        this._properties[1] = 'position' in properties ? !!properties.position : this._properties[1];\n        this._properties[2] = 'rotation' in properties ? !!properties.rotation : this._properties[2];\n        this._properties[3] = 'uvs' in properties ? !!properties.uvs : this._properties[3];\n        this._properties[4] = 'alpha' in properties ? !!properties.alpha : this._properties[4];\n    }\n};\n\nParticleContainer.prototype.updateTransform = function ()\n{\n\n    this.displayObjectUpdateTransform();\n};\n\nParticleContainer.prototype.render = function (renderer)\n{\n    if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable)\n    {\n        return;\n    }\n\n    renderer.setObjectRenderer( renderer.plugins.particle );\n    renderer.plugins.particle.render( this );\n};\n\n","(function() {\n    var lastTime = 0;\n    var androidUC = /(?=.*?uc)(?=.*?android)/i.test(window.navigator.userAgent);\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\n            window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame||androidUC) {\n        window.requestAnimationFrame = function(callback) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 20 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n    }\n\n    if (!window.cancelAnimationFrame) {\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n    }\n\n    window.RAF = window.requestAnimFrame = window.requestAnimationFrame;\n})();","\nJC.CONST = {\n    VERSION: '0.0.1',\n\n    PI_2: Math.PI * 2,\n\n    RTD: 180 / Math.PI,\n\n    DTR: Math.PI / 180,\n\n\n    /**\n     *\n     * @static\n     * @constant\n     * @property {object} BLEND_MODES\n     * @property {number} BLEND_MODES.NORMAL\n     * @property {number} BLEND_MODES.ADD\n     * @property {number} BLEND_MODES.MULTIPLY\n     * @property {number} BLEND_MODES.SCREEN\n     */\n    BLEND_MODES: {\n        NORMAL:         0,\n        ADD:            1,\n        MULTIPLY:       2,\n        SCREEN:         3\n    },\n\n    /**\n     *\n     * @static\n     * @constant\n     * @property {object} DRAW_MODES\n     * @property {number} DRAW_MODES.POINTS\n     * @property {number} DRAW_MODES.LINES\n     * @property {number} DRAW_MODES.LINE_LOOP\n     * @property {number} DRAW_MODES.LINE_STRIP\n     * @property {number} DRAW_MODES.TRIANGLES\n     * @property {number} DRAW_MODES.TRIANGLE_STRIP\n     * @property {number} DRAW_MODES.TRIANGLE_FAN\n     */\n    DRAW_MODES: {\n        POINTS:         0,\n        LINES:          1,\n        LINE_LOOP:      2,\n        LINE_STRIP:     3,\n        TRIANGLES:      4,\n        TRIANGLE_STRIP: 5,\n        TRIANGLE_FAN:   6\n    },\n\n    /**\n     *\n     * @static\n     * @constant\n     * @property {object} SCALE_MODES\n     * @property {number} SCALE_MODES.DEFAULT=LINEAR\n     * @property {number} SCALE_MODES.LINEAR Smooth scaling\n     * @property {number} SCALE_MODES.NEAREST Pixelating scaling\n     */\n    SCALE_MODES: {\n        DEFAULT:    0,\n        LINEAR:     0,\n        NEAREST:    1\n    },\n\n    DEFAULT_RENDER_OPTIONS: {\n        view: null,\n        resolution: 1,\n        antialias: false,\n        autoResize: false,\n        transparent: false,\n        backgroundColor: 0x000000,\n        clearBeforeRender: true,\n        preserveDrawingBuffer: false\n    },\n\n    SPRITE_BATCH_SIZE: 2000 //nice balance between mobile and desktop machines\n};","JC.TWEEN = {\n    easeBoth: function(t, b, c, d) { //加速减速曲线\n        if ((t /= d / 2) < 1) {\n            return c / 2 * t * t + b;\n        }\n        return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n    extend: function(opts) {\n        if (!opts) return;\n        for (var key in opts) {\n            if (key !== 'extend' && opts[key]) this[key] = opts[key];\n        }\n    }\n};\n"]}